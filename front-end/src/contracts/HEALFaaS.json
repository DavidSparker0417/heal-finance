{
  "contractName": "HEALFaaS",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spendAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allFarmingContracts",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getSpendAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "productID",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_newId",
          "type": "uint8"
        }
      ],
      "name": "setProductID",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spendAddy",
          "type": "address"
        }
      ],
      "name": "setSpendAddy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddy",
          "type": "address"
        }
      ],
      "name": "setTokenAddy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokensUpForStaking",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalStakingContracts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllFarmingContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "getTokensForStaking",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewardsTokenAddy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stakedTokenAddy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_perBlockAllocation",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_lockedUntilDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timelockSeconds",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isStakedNft",
          "type": "bool"
        }
      ],
      "name": "createNewTokenContract",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_faasTokenAddy",
          "type": "address"
        }
      ],
      "name": "removeTokenContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spendAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allFarmingContracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsTokenAddy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakedTokenAddy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_perBlockAllocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockedUntilDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timelockSeconds\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isStakedNft\",\"type\":\"bool\"}],\"name\":\"createNewTokenContract\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllFarmingContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSpendAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"getTokensForStaking\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"productID\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_faasTokenAddy\",\"type\":\"address\"}],\"name\":\"removeTokenContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_newId\",\"type\":\"uint8\"}],\"name\":\"setProductID\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spendAddy\",\"type\":\"address\"}],\"name\":\"setSpendAddy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddy\",\"type\":\"address\"}],\"name\":\"setTokenAddy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokensUpForStaking\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakingContracts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Lance Whatley\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"HEALFaaS (sHEAL)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"The constructor for the staking master contract.\"}},\"notice\":\"Implements the master FaaS contract to keep track of all tokens being added to be staked and staking.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/HEALFaaS.sol\":\"HEALFaaS\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"project:/contracts/HEALFaaS.sol\":{\"keccak256\":\"0x0dc8cf242134eef19439fc12715e505043a43b60e9169b55715e242c38b5b1c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://915aa6cc489e7ad45078bc7ef74dfaebec46b3c4186639983ce31cd98095c048\",\"dweb:/ipfs/QmWRTHbgmqd7VT6gwHUntRD4UgYYJfjrXXyWLfgBvgCStn\"]},\"project:/contracts/HEALFaaSToken.sol\":{\"keccak256\":\"0x7c52042d1487a4da596ef56fc3472603f9a570b3545f316450b1e7d42a1caef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://189d41018731728dbc13dbbb10c5a258546e13c5716cc42f834e0fe306fc49c3\",\"dweb:/ipfs/QmaoLdnYxcc1QHexdEsMpvjQXPGiMJJRgHUnS1xHZuRZLW\"]},\"project:/contracts/HEALProduct.sol\":{\"keccak256\":\"0x26dcc052e5683c5aa45eed85020af92718ace03b6c15e691d69aad645921fa70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e36b0b7c05d0a456ff3a84a7af20255a2a649f76e6a55f3bbd90bbb48041ac39\",\"dweb:/ipfs/QmUEpH47UcXRQ69Y6RZRMBmDLFQUUJtVqEhLXXojp5Sh2V\"]},\"project:/contracts/HEALWithdrawable.sol\":{\"keccak256\":\"0x9e829df3e2946b0c34d8ecdd3fbdeb2ecb16c38ec7e8b2c4223309d1f952e5e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee98085a43c295c948f101ee17b8dbead9300648b21974565d671b78c0b4b86d\",\"dweb:/ipfs/QmdKgZYa61b13hSpcXccM3Qza1NPHWWkJgYw2aTL7RaS4E\"]},\"project:/contracts/interfaces/IHEALSpend.sol\":{\"keccak256\":\"0x2b1a325eaba3e3d6452aef0477b7eb907509b4f53467f51da4a08355469cf983\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a41dad470236984def24f0b33012c5b85eb277232f7370eed1b3c58401deabf\",\"dweb:/ipfs/QmTd16GwEVn52yMX7KxBLDhjyXxjBN55ARq9stoPuudpwr\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003f1b38038062003f1b833981016040819052620000349162000101565b60088282620000433362000094565b60028054600180546001600160a01b03199081166001600160a01b03968716179091556001600160a81b0319909116600160a01b60ff96909616959095021693909317911617905550620001389050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000fc57600080fd5b919050565b6000806040838503121562000114578182fd5b6200011f83620000e4565b91506200012f60208401620000e4565b90509250929050565b613dd380620001486000396000f3fe6080604052600436106200011f5760003560e01c8063842a84bf11620000a1578063dc3aaab5116200006c578063dc3aaab5146200030b578063e086e5ec146200032b578063f2fde38b1462000343578063f3c8f7991462000368578063f9fb452f146200038057600080fd5b8063842a84bf146200027a5780638da5cb5b146200029f5780639e9f695d14620002bf578063b1e6cb8214620002e457600080fd5b806351dd8dd011620000ee57806351dd8dd014620001dc578063571d959d14620001f3578063715018a614620002185780637614d4e214620002305780637c0bf7bb146200025557600080fd5b806306b091f9146200012457806310fe9ae8146200014b5780631638a08514620001835780634bc10ccb14620001b7575b600080fd5b3480156200013157600080fd5b5062000149620001433660046200123b565b620003b6565b005b3480156200015857600080fd5b506001546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b3480156200019057600080fd5b50620001a8620001a23660046200117e565b62000591565b6040516200017a9190620012dd565b348015620001c457600080fd5b5062000149620001d63660046200117e565b62000609565b62000149620001ed366004620011c3565b62000658565b3480156200020057600080fd5b5062000149620002123660046200117e565b62000adc565b3480156200022557600080fd5b506200014962000dd2565b3480156200023d57600080fd5b50620001666200024f3660046200123b565b62000e0d565b3480156200026257600080fd5b5062000149620002743660046200117e565b62000e46565b3480156200028757600080fd5b50620001666200029936600462001288565b62000e95565b348015620002ac57600080fd5b506000546001600160a01b031662000166565b348015620002cc57600080fd5b5062000149620002de366004620012ba565b62000ec0565b348015620002f157600080fd5b50620002fc60055481565b6040519081526020016200017a565b3480156200031857600080fd5b506002546001600160a01b031662000166565b3480156200033857600080fd5b506200014962000f0d565b3480156200035057600080fd5b5062000149620003623660046200117e565b62000f96565b3480156200037557600080fd5b50620001a862001038565b3480156200038d57600080fd5b50600254620003a390600160a01b900460ff1681565b60405160ff90911681526020016200017a565b6000546001600160a01b03163314620003ec5760405162461bcd60e51b8152600401620003e390620013dc565b60405180910390fd5b818162000474576040516370a0823160e01b81523060048201526001600160a01b038216906370a082319060240160206040518083038186803b1580156200043357600080fd5b505afa15801562000448573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200046e9190620012a1565b62000476565b815b915060008211620004e55760405162461bcd60e51b815260206004820152603260248201527f6d616b65207375726520746865726520697320612062616c616e636520617661604482015271696c61626c6520746f20776974686472617760701b6064820152608401620003e3565b806001600160a01b031663a9059cbb620005076000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101859052604401602060405180830381600087803b1580156200055057600080fd5b505af115801562000565573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200058b919062001269565b50505050565b6001600160a01b038116600090815260036020908152604091829020805483518184028101840190945280845260609392830182828015620005fd57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620005de575b50505050509050919050565b6000546001600160a01b03163314620006365760405162461bcd60e51b8152600401620003e390620013dc565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6200066460006200109c565b6040516323b872dd60e01b81523360048201523060248201526044810186905287906001600160a01b038216906323b872dd90606401602060405180830381600087803b158015620006b557600080fd5b505af1158015620006ca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006f0919062001269565b506040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b1580156200073457600080fd5b505afa15801562000749573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200076f9190620012a1565b871115620007f8576040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b158015620007b757600080fd5b505afa158015620007cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007f29190620012a1565b620007fa565b865b90506000818a8a338a8a8a8a604051620008149062001170565b620008279897969594939291906200132c565b604051809103906000f08015801562000844573d6000803e3d6000fd5b506004805460018181019092557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b038085166001600160a01b031992831681179093558d16600090815260036020908152604082208054958601815582528120909301805490911690911790556005805492935090620008ce8362001445565b909155505060405163a9059cbb60e01b81526001600160a01b0382811660048301526024820184905284169063a9059cbb90604401602060405180830381600087803b1580156200091e57600080fd5b505af115801562000933573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000959919062001269565b506040516370a0823160e01b81526001600160a01b038281166004830152600091908516906370a082319060240160206040518083038186803b158015620009a057600080fd5b505afa158015620009b5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009db9190620012a1565b83111562000a66576040516370a0823160e01b81526001600160a01b0383811660048301528516906370a082319060240160206040518083038186803b15801562000a2557600080fd5b505afa15801562000a3a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a609190620012a1565b62000a68565b825b905080831462000acf57604051636bd0804960e01b8152600481018290526001600160a01b03831690636bd0804990602401600060405180830381600087803b15801562000ab557600080fd5b505af115801562000aca573d6000803e3d6000fd5b505050505b5050505050505050505050565b6000819050806001600160a01b031663a3e676106040518163ffffffff1660e01b815260040160206040518083038186803b15801562000b1b57600080fd5b505afa15801562000b30573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b569190620011a4565b6001600160a01b0316336001600160a01b03161462000bd75760405162461bcd60e51b815260206004820152603660248201527f75736572206d75737420626520746865206f726967696e616c20746f6b656e206044820152756f776e657220746f2072656d6f766520746f6b656e7360501b6064820152608401620003e3565b806001600160a01b031663cadc6c596040518163ffffffff1660e01b815260040160206040518083038186803b15801562000c1157600080fd5b505afa15801562000c26573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c4c9190620012a1565b4211801562000cce5750806001600160a01b031663cadc6c596040518163ffffffff1660e01b815260040160206040518083038186803b15801562000c9057600080fd5b505afa15801562000ca5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ccb9190620012a1565b15155b62000d615760405162461bcd60e51b815260206004820152605660248201527f6974206d75737420626520616674657220746865206c6f636b65642074696d6560448201527f207468652075736572206f726967696e616c6c7920636f6e666967757265642060648201527530b732103737ba103637b1b5b2b2103337b932bb32b960511b608482015260a401620003e3565b806001600160a01b031663e85c77bb6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000d9d57600080fd5b505af115801562000db2573d6000803e3d6000fd5b50506005805492509050600062000dc9836200142b565b91905055505050565b6000546001600160a01b0316331462000dff5760405162461bcd60e51b8152600401620003e390620013dc565b62000e0b600062001120565b565b6003602052816000526040600020818154811062000e2a57600080fd5b6000918252602090912001546001600160a01b03169150829050565b6000546001600160a01b0316331462000e735760405162461bcd60e51b8152600401620003e390620013dc565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6004818154811062000ea657600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b0316331462000eed5760405162461bcd60e51b8152600401620003e390620013dc565b6002805460ff909216600160a01b0260ff60a01b19909216919091179055565b6000546001600160a01b0316331462000f3a5760405162461bcd60e51b8152600401620003e390620013dc565b6000546001600160a01b03166001600160a01b03164760405160006040518083038185875af1925050503d806000811462000f91576040519150601f19603f3d011682016040523d82523d6000602084013e505050565b505050565b6000546001600160a01b0316331462000fc35760405162461bcd60e51b8152600401620003e390620013dc565b6001600160a01b0381166200102a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620003e3565b620010358162001120565b50565b606060048054806020026020016040519081016040528092919081815260200182805480156200109257602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162001073575b5050505050905090565b6002546001600160a01b031663d9e30e55620010b9833462001411565b60025460405160e084901b6001600160e01b0319168152336004820152600160a01b90910460ff1660248201526044016000604051808303818588803b1580156200110357600080fd5b505af115801562001118573d6000803e3d6000fd5b505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6128ff806200149f83390190565b60006020828403121562001190578081fd5b81356200119d8162001479565b9392505050565b600060208284031215620011b6578081fd5b81516200119d8162001479565b600080600080600080600060e0888a031215620011de578283fd5b8735620011eb8162001479565b96506020880135620011fd8162001479565b955060408801359450606088013593506080880135925060a0880135915060c08801356200122b816200148f565b8091505092959891949750929550565b600080604083850312156200124e578182fd5b82356200125b8162001479565b946020939093013593505050565b6000602082840312156200127b578081fd5b81516200119d816200148f565b6000602082840312156200129a578081fd5b5035919050565b600060208284031215620012b3578081fd5b5051919050565b600060208284031215620012cc578081fd5b813560ff811681146200119d578182fd5b6020808252825182820181905260009190848201906040850190845b81811015620013205783516001600160a01b031683529284019291840191600101620012f9565b50909695505050505050565b610140808252601290820152712422a0a61029ba30b5b4b733902a37b5b2b760711b61016082015261018060208201819052600590820152641cd211505360da1b6101a0820152604081018990526001600160a01b03881660608201526101c081016001600160a01b03881660808301526001600160a01b03871660a08301528560c08301528460e083015283610100830152620013cf61012083018415159052565b9998505050505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008282101562001426576200142662001463565b500390565b6000816200143d576200143d62001463565b506000190190565b60006000198214156200145c576200145c62001463565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146200103557600080fd5b80151581146200103557600080fdfe60806040526005805460ff191690553480156200001b57600080fd5b50604051620028ff380380620028ff8339810160408190526200003e9162000429565b89518a908a9062000057906003906020850190620002a2565b5080516200006d906004906020840190620002a2565b505050600084118015620000815750878411155b620000f95760405162461bcd60e51b815260206004820152603960248201527f70657220626c6f636b20616d6f756e74206d757374206265206d6f726520746860448201527f616e203020616e64206c657373207468616e20737570706c790000000000000060648201526084015b60405180910390fd5b4283118062000106575082155b6200015f5760405162461bcd60e51b815260206004820152602260248201527f6c6f636b65642074696d65206d757374206265206166746572206e6f77206f72604482015261020360f41b6064820152608401620000f0565b60058054610100600160a81b0319166101006001600160a01b038a16021790558015620001a757600780546001600160a01b0319166001600160a01b038816179055620001c3565b600680546001600160a01b0319166001600160a01b0388161790555b6040805161018081018252338082526001600160a01b0397909716602082018190529181018a9052606081018a905260006080820181905260a0820181905260c0820187905260e0820186905243610100830181905261012083018290526101408301869052931515610160909201829052600880546001600160a01b0319908116909917905560098054909816909217909655600a899055600b98909855600c889055600d889055600e93909355600f9190915560109190915560119490945560129390935550506013805460ff1916909117905550620005569050565b828054620002b09062000503565b90600052602060002090601f016020900481019282620002d457600085556200031f565b82601f10620002ef57805160ff19168380011785556200031f565b828001600101855582156200031f579182015b828111156200031f57825182559160200191906001019062000302565b506200032d92915062000331565b5090565b5b808211156200032d576000815560010162000332565b80516001600160a01b03811681146200036057600080fd5b919050565b805180151581146200036057600080fd5b600082601f83011262000387578081fd5b81516001600160401b0380821115620003a457620003a462000540565b604051601f8301601f19908116603f01168101908282118183101715620003cf57620003cf62000540565b81604052838152602092508683858801011115620003eb578485fd5b8491505b838210156200040e5785820183015181830184015290820190620003ef565b838211156200041f57848385830101525b9695505050505050565b6000806000806000806000806000806101408b8d03121562000449578586fd5b8a516001600160401b038082111562000460578788fd5b6200046e8e838f0162000376565b9b5060208d015191508082111562000484578788fd5b50620004938d828e0162000376565b99505060408b01519750620004ab60608c0162000348565b9650620004bb60808c0162000348565b9550620004cb60a08c0162000348565b945060c08b0151935060e08b015192506101008b01519150620004f26101208c0162000365565b90509295989b9194979a5092959850565b600181811c908216806200051857607f821691505b602082108114156200053a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61239980620005666000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c806395d89b41116100de578063cadc6c5911610097578063e85c77bb11610071578063e85c77bb14610453578063e93793f61461045b578063fd7db85414610471578063ff333a761461048457600080fd5b8063cadc6c591461040a578063dd62ed3e14610412578063e17c0f111461044b57600080fd5b806395d89b411461039757806396e231e91461039f578063a3e67610146103ac578063a457c2d7146103d1578063a9059cbb146103e4578063b7f1ef1e146103f757600080fd5b8063395093511161014b57806370a082311161012557806370a08231146102ee5780637589cf2f146103175780638bdfe9561461031f5780639168ae721461033257600080fd5b806339509351146102b35780634afcb537146102c65780636bd08049146102d957600080fd5b806306fdde0314610193578063095ea7b3146101b157806316f0115b146101d457806318160ddd1461027f57806323b872dd14610291578063313ce567146102a4575b600080fd5b61019b61048c565b6040516101a891906121c3565b60405180910390f35b6101c46101bf36600461201e565b61051e565b60405190151581526020016101a8565b600854600954600a54600b54600c54600d54600e54600f546010546011546012546013546102199b6001600160a01b039081169b169998979695949392919060ff168c565b604080516001600160a01b039d8e1681529c909b1660208d0152998b019890985260608a0196909652608089019490945260a088019290925260c087015260e08601526101008501526101208401526101408301521515610160820152610180016101a8565b6002545b6040519081526020016101a8565b6101c461029f366004611fad565b610536565b604051601281526020016101a8565b6101c46102c136600461201e565b61055a565b6102836102d4366004611f61565b610599565b6102ec6102e7366004612063565b61074a565b005b6102836102fc366004611f61565b6001600160a01b031660009081526020819052604090205490565b6102ec6107c7565b61028361032d366004611fe8565b610b1a565b61036f610340366004611f61565b601460205260009081526040902080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a0016101a8565b61019b610c22565b6005546101c49060ff1681565b6009546001600160a01b03165b6040516001600160a01b0390911681526020016101a8565b6101c46103df36600461201e565b610c31565b6101c46103f236600461201e565b610cc3565b6102ec610405366004612093565b610cd1565b600f54610283565b610283610420366004611f7b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61028361115e565b6102ec61119a565b60055461010090046001600160a01b03166103b9565b6102ec61047f36600461215f565b6112e4565b6103b961175c565b60606003805461049b906122d3565b80601f01602080910402602001604051908101604052809291908181526020018280546104c7906122d3565b80156105145780601f106104e957610100808354040283529160200191610514565b820191906000526020600020905b8154815290600101906020018083116104f757829003601f168201915b5050505050905090565b60003361052c818585611789565b5060019392505050565b6000336105448582856118ad565b61054f85858561193f565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061052c9082908690610594908790612239565b611789565b6001600160a01b0381166000908152601460209081526040808320815160c0810183528154815260018201548185015260028201548184015260038201546060820152600482015460808201526005820180548451818702810187019095528085528695929460a08601939092919083018282801561063757602002820191906000526020600020905b815481526020019060010190808311610623575b505050505081525050905043816060015110158061065757506020810151155b806106625750600c54155b156106705750600092915050565b601154601054431180156106855750600c5415155b1561070a57600061069461115e565b905060008143106106a557816106a7565b435b6010549091506000906106bb908390611b0d565b600e549091506000906106cf908390611b19565b600c54909150610703906106fc906106f6846ec097ce7bc90715b34b9f1000000000611b19565b90611b25565b8690611b31565b9450505050505b610742826080015161073c6ec097ce7bc90715b34b9f10000000006106f6858760000151611b1990919063ffffffff16565b90611b0d565b949350505050565b6008546001600160a01b031633146107bd5760405162461bcd60e51b815260206004820152602b60248201527f6f6e6c7920636f6e74726163742063726561746f722063616e2075706461746560448201526a2074686520737570706c7960a81b60648201526084015b60405180910390fd5b600a819055600b55565b336000908152601460209081526040808320815160c0810183528154815260018201548185015260028201548184015260038201546060820152600482015460808201526005820180548451818702810187019095528085529194929360a086019390929083018282801561085b57602002820191906000526020600020905b815481526020019060010190808311610847575b505050919092525050815191925050806108d55760405162461bcd60e51b815260206004820152603560248201527f757365722063616e206f6e6c7920756e7374616b6520696620746865792068616044820152741d99481d1bdad95b9cc81a5b881d1a19481c1bdbdb605a1b60648201526084016107b4565b3360009081526020819052604090205461090f9061dead905b83116108fa5782610cc3565b33600090815260208190526040902054610cc3565b5060135460ff16156109db5760005b8260a00151518110156109d55760075460a084015180516001600160a01b03909216916323b872dd9130913391908690811061096a57634e487b7160e01b600052603260045260246000fd5b60200260200101516040518463ffffffff1660e01b81526004016109909392919061219f565b600060405180830381600087803b1580156109aa57600080fd5b505af11580156109be573d6000803e3d6000fd5b5050505080806109cd9061230e565b91505061091e565b50610a7b565b60065460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015610a2757600080fd5b505af1158015610a3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5f9190612047565b610a7b5760405162461bcd60e51b81526004016107b4906121f6565b3360009081526014602052604081208181556001810182905560028101829055600381018290556004810182905590610ab76005830182611f0b565b5050610ae1816040518060400160405280600681526020016572656d6f766560d01b815250611b3d565b60405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a25050565b6008546000906001600160a01b0316331480610b3e5750336001600160a01b038416145b610bc25760405162461bcd60e51b815260206004820152604960248201527f63616e206f6e6c79206861727665737420746f6b656e7320666f7220736f6d6560448201527f6f6e6520656c73652069662074686973207761732074686520636f6e747261636064820152683a1031b932b0ba37b960b91b608482015260a4016107b4565b610bca611b8b565b6000610bd584611c23565b9050828015610be7575060135460ff16155b8015610c08575060065460055461010090046001600160a01b039081169116145b15610c1b576060610c198282610cd1565b505b9392505050565b60606004805461049b906122d3565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919083811015610cb65760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016107b4565b61054f8286868403611789565b60003361052c81858561193f565b43610cda61115e565b11610d455760405162461bcd60e51b815260206004820152603560248201527f74686973206661726d206973206578706972656420616e64206e6f206d6f7265604482015274081cdd185ad95c9cc818d85b881899481859191959605a1b60648201526084016107b4565b610d4d611b8b565b3360009081526020819052604090205415610d6d57610d6b33611c23565b505b60135460009060ff1615610ea0576000825111610de55760405162461bcd60e51b815260206004820152603060248201527f796f75206e65656420746f2070726f76696465204e465420746f6b656e20494460448201526f7320796f75277265207374616b696e6760801b60648201526084016107b4565b60005b8251811015610e975760075483516001600160a01b03909116906323b872dd9033903090879086908110610e2c57634e487b7160e01b600052603260045260246000fd5b60200260200101516040518463ffffffff1660e01b8152600401610e529392919061219f565b600060405180830381600087803b158015610e6c57600080fd5b505af1158015610e80573d6000803e3d6000fd5b505050508080610e8f9061230e565b915050610de8565b50508051611029565b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610ee457600080fd5b505afa158015610ef8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1c919061207b565b6006546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd90610f519033903090899060040161219f565b602060405180830381600087803b158015610f6b57600080fd5b505af1158015610f7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa39190612047565b506006546040516370a0823160e01b81523060048201526110259183916001600160a01b03909116906370a082319060240160206040518083038186803b158015610fed57600080fd5b505afa158015611001573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073c919061207b565b9150505b60025461103a5743600d8190556010555b6110443382611dd3565b336000908152601460205260409020805461105f9083611b31565b80825543600183018190554260028401556003830155601154611097916ec097ce7bc90715b34b9f1000000000916106f69190611b19565b600482015560005b83518110156110fd57816005018482815181106110cc57634e487b7160e01b600052603260045260246000fd5b60209081029190910181015182546001810184556000938452919092200155806110f58161230e565b91505061109f565b50611123826040518060400160405280600381526020016218591960ea1b815250611b3d565b60405182815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a250505050565b600d5460009081901561117357600d54611175565b435b600e54600a5491925061119491839161118e9190611b25565b90611b31565b91505090565b6008546001600160a01b03163314806111bd57506009546001600160a01b031633145b61123e5760405162461bcd60e51b815260206004820152604660248201527f63616c6c6572206d7573742062652074686520636f6e7472616374206372656160448201527f746f72206f72206f776e657220746f2072656d6f7665207374616b61626c6520606482015265746f6b656e7360d01b608482015260a4016107b4565b600554600954600b5460405163a9059cbb60e01b81526001600160a01b0392831660048201526024810191909152610100909204169063a9059cbb90604401602060405180830381600087803b15801561129757600080fd5b505af11580156112ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112cf9190612047565b506000600b556005805460ff19166001179055565b336000908152601460209081526040808320815160c0810183528154815260018201548185015260028201548184015260038201546060820152600482015460808201526005820180548451818702810187019095528085529194929360a086019390929083018282801561137857602002820191906000526020600020905b815481526020019060010190808311611364575b50505091909252505081516013549293509160ff16905061139c578084111561139f565b60015b6114115760405162461bcd60e51b815260206004820152603f60248201527f757365722063616e206f6e6c7920756e7374616b6520616d6f756e742074686560448201527f7920686176652063757272656e746c79207374616b6564206f72206c6573730060648201526084016107b4565b82158061142e5750601254604083015161142a91611b31565b4210155b8061143b575060055460ff165b8061144c575061144961115e565b43115b6114d05760405162461bcd60e51b815260206004820152604960248201527f796f752068617665206e6f74207374616b656420666f72206d696e696d756d2060448201527f74696d65206c6f636b2079657420616e642074686520706f6f6c206973206e6f6064820152681d08195e1c1a5c995960ba1b608482015260a4016107b4565b6114d8611b8b565b82156114e9576114e733611c23565b505b60135460009060ff166114fc57846114fe565b815b905061152561dead6108ee336001600160a01b031660009081526020819052604090205490565b5060135460ff16156115f15760005b8360a00151518110156115eb5760075460a085015180516001600160a01b03909216916323b872dd9130913391908690811061158057634e487b7160e01b600052603260045260246000fd5b60200260200101516040518463ffffffff1660e01b81526004016115a69392919061219f565b600060405180830381600087803b1580156115c057600080fd5b505af11580156115d4573d6000803e3d6000fd5b5050505080806115e39061230e565b915050611534565b50611691565b60065460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561163d57600080fd5b505af1158015611651573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116759190612047565b6116915760405162461bcd60e51b81526004016107b4906121f6565b33600090815260208190526040812054116116e95733600090815260146020526040812081815560018101829055600281018290556003810182905560048101829055906116e26005830182611f0b565b50506116f8565b82516116f59082611b0d565b83525b611720816040518060400160405280600681526020016572656d6f766560d01b815250611b3d565b60405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a25050505050565b60135460009060ff1661177957506006546001600160a01b031690565b506007546001600160a01b031690565b6001600160a01b0383166117eb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016107b4565b6001600160a01b03821661184c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016107b4565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114611939578181101561192c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016107b4565b6119398484848403611789565b50505050565b6001600160a01b0383166119a35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016107b4565b6001600160a01b038216611a055760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016107b4565b6001600160a01b03831660009081526020819052604090205481811015611a7d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016107b4565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611ab4908490612239565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611b0091815260200190565b60405180910390a3611939565b6000610c1b8284612290565b6000610c1b8284612271565b6000610c1b8284612251565b6000610c1b8284612239565b611b65816040518060400160405280600681526020016572656d6f766560d01b815250611eb2565b15611b7e57600c54611b779083611b0d565b600c555050565b600c54611b779083611b31565b6000611b9561115e565b90506000814310611ba65781611ba8565b435b6010549091508111611bb8575050565b600c5480611bc7575060105550565b601054600090611bd8908490611b0d565b600e54909150600090611bec908390611b19565b9050611c17611c0e846106f6846ec097ce7bc90715b34b9f1000000000611b19565b60115490611b31565b60115550505060105550565b6001600160a01b03811660009081526014602052604081206001810154611c8c5760405162461bcd60e51b815260206004820152601c60248201527f75736572206d757374206861766520746f6b656e73207374616b65640000000060448201526064016107b4565b6000611c9784610599565b90508015611d9b5760055460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018490526101009092049091169063a9059cbb90604401602060405180830381600087803b158015611cf357600080fd5b505af1158015611d07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d2b9190612047565b611d8a5760405162461bcd60e51b815260206004820152602a60248201527f756e61626c6520746f2073656e6420757365722074686569722068617276657360448201526974656420746f6b656e7360b01b60648201526084016107b4565b600b54611d979082611b0d565b600b555b6011548254611dbe916ec097ce7bc90715b34b9f1000000000916106f691611b19565b60048301554360039092019190915592915050565b6001600160a01b038216611e295760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016107b4565b8060026000828254611e3b9190612239565b90915550506001600160a01b03821660009081526020819052604081208054839290611e68908490612239565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600081604051602001611ec59190612183565b6040516020818303038152906040528051906020012083604051602001611eec9190612183565b6040516020818303038152906040528051906020012014905092915050565b5080546000825590600052602060002090810190611f299190611f2c565b50565b5b80821115611f415760008155600101611f2d565b5090565b80356001600160a01b0381168114611f5c57600080fd5b919050565b600060208284031215611f72578081fd5b610c1b82611f45565b60008060408385031215611f8d578081fd5b611f9683611f45565b9150611fa460208401611f45565b90509250929050565b600080600060608486031215611fc1578081fd5b611fca84611f45565b9250611fd860208501611f45565b9150604084013590509250925092565b60008060408385031215611ffa578182fd5b61200383611f45565b9150602083013561201381612355565b809150509250929050565b60008060408385031215612030578182fd5b61203983611f45565b946020939093013593505050565b600060208284031215612058578081fd5b8151610c1b81612355565b600060208284031215612074578081fd5b5035919050565b60006020828403121561208c578081fd5b5051919050565b600080604083850312156120a5578182fd5b8235915060208084013567ffffffffffffffff808211156120c4578384fd5b818601915086601f8301126120d7578384fd5b8135818111156120e9576120e961233f565b8060051b604051601f19603f8301168101818110858211171561210e5761210e61233f565b604052828152858101935084860182860187018b101561212c578788fd5b8795505b8386101561214e578035855260019590950194938601938601612130565b508096505050505050509250929050565b60008060408385031215612171578182fd5b82359150602083013561201381612355565b600082516121958184602087016122a7565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60208152600082518060208401526121e28160408501602087016122a7565b601f01601f19169190910160400192915050565b60208082526023908201527f756e61626c6520746f2073656e642075736572206f726967696e616c20746f6b604082015262656e7360e81b606082015260800190565b6000821982111561224c5761224c612329565b500190565b60008261226c57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561228b5761228b612329565b500290565b6000828210156122a2576122a2612329565b500390565b60005b838110156122c25781810151838201526020016122aa565b838111156119395750506000910152565b600181811c908216806122e757607f821691505b6020821081141561230857634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561232257612322612329565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b8015158114611f2957600080fdfea2646970667358221220a91d53c2af50a0c417952d8f4dedee27a933c95d5650bce358127a6288ace9f564736f6c63430008040033a264697066735822122023bfbbd6c743595da516fe0c064222ed0282c1a38f204fdfc5c467efa475c93264736f6c63430008040033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:501:16",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:16",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:16"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:16",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:16",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:16"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:16"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:16",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:16"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:16"
                  },
                  "nodeType": "YulIf",
                  "src": "115:2:16"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:16",
                "type": ""
              }
            ],
            "src": "14:177:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "294:205:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "340:26:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "349:6:16"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "357:6:16"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "342:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "342:22:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "342:22:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "315:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "324:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "311:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "311:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "336:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "307:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "307:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "304:2:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "375:50:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "415:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "385:29:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "385:40:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "375:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "434:59:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "478:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "489:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "474:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "474:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "444:29:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "444:49:16"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "434:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "252:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "263:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "275:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "283:6:16",
                "type": ""
              }
            ],
            "src": "196:303:16"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n}",
      "id": 16,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9374:16",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:16",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:187:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:16"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:16"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "235:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "210:24:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:31:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "210:31:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "250:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "260:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "250:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:16",
                "type": ""
              }
            ],
            "src": "14:257:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "357:180:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "403:26:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "412:6:16"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "420:6:16"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "405:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "405:22:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "405:22:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "378:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "387:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "374:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "374:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "399:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "370:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "370:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "367:2:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "438:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "457:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "451:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "451:16:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "442:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "501:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "476:24:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "476:31:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "476:31:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "516:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "526:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "516:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "323:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "334:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "346:6:16",
                "type": ""
              }
            ],
            "src": "276:261:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "711:640:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "758:26:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "767:6:16"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "775:6:16"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "760:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "760:22:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "760:22:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "732:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "741:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "728:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "728:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "753:3:16",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "724:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "724:33:16"
                  },
                  "nodeType": "YulIf",
                  "src": "721:2:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "793:36:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "819:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "806:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "806:23:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "797:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "863:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "838:24:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "838:31:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "838:31:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "878:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "888:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "878:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "902:47:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "934:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "945:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "930:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "930:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "917:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "917:32:16"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "906:7:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "983:7:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "958:24:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "958:33:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "958:33:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1000:17:16",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1010:7:16"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1000:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1026:42:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1053:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1064:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1049:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1049:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1036:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1036:32:16"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1026:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1077:42:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1104:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1115:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1100:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1100:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1087:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1087:32:16"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1077:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1128:43:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1155:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1166:3:16",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1151:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1151:19:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1138:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1138:33:16"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1128:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1180:43:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1207:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1218:3:16",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1203:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1203:19:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1190:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1190:33:16"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "1180:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1232:48:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1264:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1275:3:16",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1260:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1260:19:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1247:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1247:33:16"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "1236:7:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "1311:7:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "1289:21:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1289:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1289:30:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1328:17:16",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "1338:7:16"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "1328:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "629:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "640:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "652:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "660:6:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "668:6:16",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "676:6:16",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "684:6:16",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "692:6:16",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "700:6:16",
                "type": ""
              }
            ],
            "src": "542:809:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1443:238:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1489:26:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1498:6:16"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1506:6:16"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1491:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1491:22:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1491:22:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1464:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1473:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1460:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1460:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1485:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1456:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1456:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "1453:2:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1524:36:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1550:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1537:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1537:23:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1528:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1594:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1569:24:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1569:31:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1569:31:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1609:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1619:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1609:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1633:42:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1660:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1671:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1656:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1656:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1643:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1643:32:16"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1633:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1401:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1412:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1424:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1432:6:16",
                "type": ""
              }
            ],
            "src": "1356:325:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1764:177:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1810:26:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1819:6:16"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1827:6:16"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1812:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1812:22:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1812:22:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1785:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1794:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1781:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1781:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1806:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1777:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1777:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "1774:2:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1845:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1864:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1858:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1858:16:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1849:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1905:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "1883:21:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1883:28:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1883:28:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1920:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1930:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1920:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1730:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1741:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1753:6:16",
                "type": ""
              }
            ],
            "src": "1686:255:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2016:120:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2062:26:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2071:6:16"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2079:6:16"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2064:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2064:22:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2064:22:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2037:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2046:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2033:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2033:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2058:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2029:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2029:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "2026:2:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2097:33:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2120:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2107:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2107:23:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2097:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1982:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1993:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2005:6:16",
                "type": ""
              }
            ],
            "src": "1946:190:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2222:113:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2268:26:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2277:6:16"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2285:6:16"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2270:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2270:22:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2270:22:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2243:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2252:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2239:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2239:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2264:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2235:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2235:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "2232:2:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2303:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2319:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2313:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2313:16:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2303:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2188:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2199:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2211:6:16",
                "type": ""
              }
            ],
            "src": "2141:194:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2408:221:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2454:26:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2463:6:16"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2471:6:16"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2456:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2456:22:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2456:22:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2429:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2438:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2425:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2425:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2450:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2421:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2421:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "2418:2:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2489:36:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2515:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2502:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2502:23:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2493:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2573:26:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2582:6:16"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2590:6:16"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2575:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2575:22:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2575:22:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2547:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2558:5:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2565:4:16",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2554:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2554:16:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2544:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2544:27:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2537:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2537:35:16"
                  },
                  "nodeType": "YulIf",
                  "src": "2534:2:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2608:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2618:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2608:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2374:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2385:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2397:6:16",
                "type": ""
              }
            ],
            "src": "2340:289:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2678:60:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2695:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2704:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2719:3:16",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2724:1:16",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2715:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2715:11:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2728:1:16",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2711:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2711:19:16"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2700:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2700:31:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2688:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2688:44:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2688:44:16"
                }
              ]
            },
            "name": "abi_encode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2662:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2669:3:16",
                "type": ""
              }
            ],
            "src": "2634:104:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2784:50:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2801:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2820:5:16"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2813:6:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2813:13:16"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2806:6:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2806:21:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2794:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2794:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2794:34:16"
                }
              ]
            },
            "name": "abi_encode_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2768:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2775:3:16",
                "type": ""
              }
            ],
            "src": "2743:91:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3030:14:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3032:10:16",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "3039:3:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3032:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3014:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3022:3:16",
                "type": ""
              }
            ],
            "src": "2839:205:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3150:102:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3160:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3172:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3183:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3168:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3168:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3160:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3202:9:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3217:6:16"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3233:3:16",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3238:1:16",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3229:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3229:11:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3242:1:16",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3225:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3225:19:16"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3213:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3213:32:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3195:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3195:51:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3195:51:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3119:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3130:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3141:4:16",
                "type": ""
              }
            ],
            "src": "3049:203:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3414:218:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3424:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3436:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3447:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3432:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3432:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3424:4:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3459:29:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3477:3:16",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3482:1:16",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3473:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3473:11:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3486:1:16",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3469:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3469:19:16"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3463:2:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3504:9:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3519:6:16"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3527:2:16"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3515:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3515:15:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3497:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3497:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3497:34:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3551:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3562:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3547:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3547:18:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3571:6:16"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3579:2:16"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3567:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3567:15:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3540:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3540:43:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3540:43:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3603:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3614:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3599:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3599:18:16"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3619:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3592:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3592:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3592:34:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3367:9:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3378:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3386:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3394:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3405:4:16",
                "type": ""
              }
            ],
            "src": "3257:375:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3766:145:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3776:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3788:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3799:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3784:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3784:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3776:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3818:9:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3833:6:16"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3849:3:16",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3854:1:16",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3845:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3845:11:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3858:1:16",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3841:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3841:19:16"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3829:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3829:32:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3811:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3811:51:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3811:51:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3882:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3893:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3878:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3878:18:16"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3898:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3871:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3871:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3871:34:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3727:9:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3738:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3746:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3757:4:16",
                "type": ""
              }
            ],
            "src": "3637:274:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4041:156:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4051:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4063:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4074:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4059:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4059:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4051:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4093:9:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4108:6:16"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4124:3:16",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4129:1:16",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4120:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4120:11:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4133:1:16",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4116:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4116:19:16"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4104:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4104:32:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4086:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4086:51:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4086:51:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4157:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4168:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4153:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4153:18:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4177:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4185:4:16",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4173:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4173:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4146:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4146:45:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4146:45:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4002:9:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4013:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4021:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4032:4:16",
                "type": ""
              }
            ],
            "src": "3916:281:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4353:510:16",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4363:12:16",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4373:2:16",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4367:2:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4384:32:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4402:9:16"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4413:2:16"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4398:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4398:18:16"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "4388:6:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4432:9:16"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4443:2:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4425:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4425:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4425:21:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4455:17:16",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "4466:6:16"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "4459:3:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4481:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4501:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4495:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4495:13:16"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4485:6:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "4524:6:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4532:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4517:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4517:22:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4517:22:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4548:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4559:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4570:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4555:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4555:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4548:3:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4582:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4600:6:16"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4608:2:16"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4596:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4596:15:16"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "4586:6:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4620:13:16",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "4629:4:16"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "4624:1:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4691:146:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4712:3:16"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "4727:6:16"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "4721:5:16"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4721:13:16"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4744:3:16",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4749:1:16",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "4740:3:16"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4740:11:16"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4753:1:16",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "4736:3:16"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4736:19:16"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "4717:3:16"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4717:39:16"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4705:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4705:52:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4705:52:16"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4770:19:16",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4781:3:16"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4786:2:16"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4777:3:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4777:12:16"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4770:3:16"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4802:25:16",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4816:6:16"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4824:2:16"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4812:3:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4812:15:16"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4802:6:16"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4653:1:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4656:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4650:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4650:13:16"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4664:18:16",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4666:14:16",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4675:1:16"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4678:1:16",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4671:3:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4671:9:16"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4666:1:16"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4646:3:16",
                    "statements": []
                  },
                  "src": "4642:195:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4846:11:16",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4854:3:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4846:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4322:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4333:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4344:4:16",
                "type": ""
              }
            ],
            "src": "4202:661:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5042:228:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5059:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5070:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5052:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5052:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5052:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5093:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5104:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5089:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5089:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5109:2:16",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5082:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5082:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5082:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5132:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5143:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5128:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5128:18:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5148:34:16",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5121:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5121:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5121:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5203:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5214:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5199:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5199:18:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5219:8:16",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5192:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5192:36:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5192:36:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5237:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5249:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5260:3:16",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5245:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5245:19:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5237:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5019:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5033:4:16",
                "type": ""
              }
            ],
            "src": "4868:402:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5768:733:16",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5778:13:16",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5788:3:16",
                    "type": "",
                    "value": "320"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5782:2:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5807:9:16"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5818:2:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5800:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5800:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5800:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5841:9:16"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5852:2:16"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5837:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5837:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5857:2:16",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5830:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5830:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5830:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5880:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5891:3:16",
                            "type": "",
                            "value": "352"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5876:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5876:19:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5897:20:16",
                        "type": "",
                        "value": "HEAL Staking Token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5869:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5869:49:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5869:49:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5927:13:16",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5937:3:16",
                    "type": "",
                    "value": "384"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "5931:2:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5960:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5971:4:16",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5956:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5956:20:16"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "5978:2:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5949:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5949:32:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5949:32:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6001:9:16"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "6012:2:16"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5997:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5997:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6017:1:16",
                        "type": "",
                        "value": "5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5990:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5990:29:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5990:29:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6039:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6050:3:16",
                            "type": "",
                            "value": "416"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6035:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6035:19:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6056:7:16",
                        "type": "",
                        "value": "sHEAL"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6028:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6028:36:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6028:36:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6073:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6085:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6096:3:16",
                        "type": "",
                        "value": "448"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6081:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6081:19:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6073:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6120:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6131:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6116:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6116:18:16"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6136:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6109:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6109:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6109:34:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6171:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6183:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6194:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6179:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6179:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_address",
                      "nodeType": "YulIdentifier",
                      "src": "6152:18:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6152:46:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6152:46:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6226:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6238:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6249:3:16",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6234:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6234:19:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_address",
                      "nodeType": "YulIdentifier",
                      "src": "6207:18:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6207:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6207:47:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "6282:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6294:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6305:3:16",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6290:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6290:19:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_address",
                      "nodeType": "YulIdentifier",
                      "src": "6263:18:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6263:47:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6263:47:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6330:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6341:3:16",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6326:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6326:19:16"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "6347:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6319:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6319:35:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6319:35:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6374:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6385:3:16",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6370:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6370:19:16"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "6391:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6363:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6363:35:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6363:35:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6418:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6429:3:16",
                            "type": "",
                            "value": "256"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6414:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6414:19:16"
                      },
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "6435:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6407:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6407:35:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6407:35:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "6467:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6479:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6490:3:16",
                            "type": "",
                            "value": "288"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6475:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6475:19:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bool",
                      "nodeType": "YulIdentifier",
                      "src": "6451:15:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6451:44:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6451:44:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_256d2276fb89ab3bebc4eb7994cd6270572b2a43b40adf07e2055e66ee8ea9ed_t_stringliteral_83f47ecf9d2c1c04057647ee2d51efaa3bdc853be89007d8d461f8123f99bb33_t_uint256_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5681:9:16",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "5692:6:16",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "5700:6:16",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "5708:6:16",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "5716:6:16",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5724:6:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5732:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5740:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5748:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5759:4:16",
                "type": ""
              }
            ],
            "src": "5275:1226:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6680:316:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6697:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6708:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6690:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6690:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6690:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6731:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6742:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6727:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6727:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6747:2:16",
                        "type": "",
                        "value": "86"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6720:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6720:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6720:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6770:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6781:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6766:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6766:18:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6786:34:16",
                        "type": "",
                        "value": "it must be after the locked time"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6759:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6759:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6759:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6841:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6852:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6837:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6837:18:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6857:34:16",
                        "type": "",
                        "value": " the user originally configured "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6830:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6830:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6830:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6912:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6923:3:16",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6908:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6908:19:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6929:24:16",
                        "type": "",
                        "value": "and not locked forever"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6901:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6901:53:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6901:53:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6963:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6975:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6986:3:16",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6971:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6971:19:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6963:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_28e953ae3adb1a30badea18e423c357c898a37bafb2b9f1266f0238b14c075f6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6657:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6671:4:16",
                "type": ""
              }
            ],
            "src": "6506:490:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7175:240:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7192:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7203:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7185:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7185:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7185:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7226:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7237:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7222:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7222:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7242:2:16",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7215:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7215:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7215:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7265:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7276:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7261:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7261:18:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7281:34:16",
                        "type": "",
                        "value": "make sure there is a balance ava"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7254:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7254:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7254:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7336:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7347:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7332:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7332:18:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7352:20:16",
                        "type": "",
                        "value": "ilable to withdraw"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7325:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7325:48:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7325:48:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7382:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7394:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7405:3:16",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7390:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7390:19:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7382:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_30e08737857571d35326139f45bb735714bf424b705a312dbda599687622009f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7152:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7166:4:16",
                "type": ""
              }
            ],
            "src": "7001:414:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7594:244:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7611:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7622:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7604:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7604:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7604:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7645:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7656:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7641:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7641:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7661:2:16",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7634:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7634:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7634:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7684:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7695:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7680:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7680:18:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7700:34:16",
                        "type": "",
                        "value": "user must be the original token "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7673:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7673:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7673:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7755:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7766:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7751:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7751:18:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7771:24:16",
                        "type": "",
                        "value": "owner to remove tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7744:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7744:52:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7744:52:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7805:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7817:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7828:3:16",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7813:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7813:19:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7805:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_66d5f61e90fc7ada073db45873bd81ed1e58c3f1ff38a23c7035dc3bdee09d87__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7571:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7585:4:16",
                "type": ""
              }
            ],
            "src": "7420:418:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8017:182:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8034:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8045:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8027:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8027:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8027:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8068:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8079:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8064:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8064:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8084:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8057:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8057:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8057:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8107:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8118:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8103:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8103:18:16"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8123:34:16",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8096:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8096:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8096:62:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8167:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8179:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8190:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8175:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8175:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8167:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7994:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8008:4:16",
                "type": ""
              }
            ],
            "src": "7843:356:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8305:76:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8315:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8327:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8338:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8323:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8323:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8315:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8357:9:16"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8368:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8350:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8350:25:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8350:25:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8274:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8285:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8296:4:16",
                "type": ""
              }
            ],
            "src": "8204:177:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8483:87:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8493:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8505:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8516:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8501:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8501:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8493:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8535:9:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8550:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8558:4:16",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8546:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8546:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8528:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8528:36:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8528:36:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8452:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8463:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8474:4:16",
                "type": ""
              }
            ],
            "src": "8386:184:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8624:76:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8646:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8648:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8648:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8648:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8640:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8643:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8637:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8637:8:16"
                  },
                  "nodeType": "YulIf",
                  "src": "8634:2:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8677:17:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8689:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8692:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "8685:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8685:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "8677:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8606:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8609:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "8615:4:16",
                "type": ""
              }
            ],
            "src": "8575:125:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8752:89:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8779:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8781:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8781:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8781:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8772:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8765:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8765:13:16"
                  },
                  "nodeType": "YulIf",
                  "src": "8762:2:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8810:25:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8821:5:16"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8832:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "8828:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8828:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8817:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8817:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "8810:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8734:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "8744:3:16",
                "type": ""
              }
            ],
            "src": "8705:136:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8893:88:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8924:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8926:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8926:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8926:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8909:5:16"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8920:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "8916:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8916:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "8906:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8906:17:16"
                  },
                  "nodeType": "YulIf",
                  "src": "8903:2:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8955:20:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8966:5:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8973:1:16",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8962:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8962:13:16"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "8955:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8875:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "8885:3:16",
                "type": ""
              }
            ],
            "src": "8846:135:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9018:95:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9035:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9042:3:16",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9047:10:16",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "9038:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9038:20:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9028:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9028:31:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9028:31:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9075:1:16",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9078:4:16",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9068:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9068:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9068:15:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9099:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9102:4:16",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9092:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9092:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9092:15:16"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "8986:127:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9163:86:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9227:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9236:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9239:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9229:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9229:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9229:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9186:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9197:5:16"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9212:3:16",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9217:1:16",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "9208:3:16"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9208:11:16"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9221:1:16",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "9204:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9204:19:16"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "9193:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9193:31:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9183:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9183:42:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9176:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9176:50:16"
                  },
                  "nodeType": "YulIf",
                  "src": "9173:2:16"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9152:5:16",
                "type": ""
              }
            ],
            "src": "9118:131:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9296:76:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9350:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9359:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9362:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9352:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9352:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9352:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9319:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "9340:5:16"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "9333:6:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9333:13:16"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "9326:6:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9326:21:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9316:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9316:32:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9309:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9309:40:16"
                  },
                  "nodeType": "YulIf",
                  "src": "9306:2:16"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9285:5:16",
                "type": ""
              }
            ],
            "src": "9254:118:16"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(value4, value4) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        let value_2 := calldataload(add(headStart, 192))\n        validator_revert_bool(value_2)\n        value6 := value_2\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_256d2276fb89ab3bebc4eb7994cd6270572b2a43b40adf07e2055e66ee8ea9ed_t_stringliteral_83f47ecf9d2c1c04057647ee2d51efaa3bdc853be89007d8d461f8123f99bb33_t_uint256_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 320\n        mstore(headStart, _1)\n        mstore(add(headStart, _1), 18)\n        mstore(add(headStart, 352), \"HEAL Staking Token\")\n        let _2 := 384\n        mstore(add(headStart, 0x20), _2)\n        mstore(add(headStart, _2), 5)\n        mstore(add(headStart, 416), \"sHEAL\")\n        tail := add(headStart, 448)\n        mstore(add(headStart, 64), value0)\n        abi_encode_address(value1, add(headStart, 96))\n        abi_encode_address(value2, add(headStart, 128))\n        abi_encode_address(value3, add(headStart, 160))\n        mstore(add(headStart, 192), value4)\n        mstore(add(headStart, 224), value5)\n        mstore(add(headStart, 256), value6)\n        abi_encode_bool(value7, add(headStart, 288))\n    }\n    function abi_encode_tuple_t_stringliteral_28e953ae3adb1a30badea18e423c357c898a37bafb2b9f1266f0238b14c075f6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 86)\n        mstore(add(headStart, 64), \"it must be after the locked time\")\n        mstore(add(headStart, 96), \" the user originally configured \")\n        mstore(add(headStart, 128), \"and not locked forever\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_30e08737857571d35326139f45bb735714bf424b705a312dbda599687622009f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"make sure there is a balance ava\")\n        mstore(add(headStart, 96), \"ilable to withdraw\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_66d5f61e90fc7ada073db45873bd81ed1e58c3f1ff38a23c7035dc3bdee09d87__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"user must be the original token \")\n        mstore(add(headStart, 96), \"owner to remove tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
      "id": 16,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "304:3436:11:-:0;;;835:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;916:1;920:13;935;921:32:0;719:10:7;921:18:0;:32::i;:::-;541:9:13;:22;;-1:-1:-1;570:27:13;;-1:-1:-1;;;;;;570:27:13;;;-1:-1:-1;;;;;570:27:13;;;;;;;-1:-1:-1;;;;;;604:31:13;;;-1:-1:-1;;;541:22:13;;;;;;;;;604:31;;;;;;;;;;-1:-1:-1;304:3436:11;;-1:-1:-1;304:3436:11;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2270:187;;:::o;14:177:16:-;93:13;;-1:-1:-1;;;;;135:31:16;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:303::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:2;;;357:6;349;342:22;304:2;385:40;415:9;385:40;:::i;:::-;375:50;;444:49;489:2;478:9;474:18;444:49;:::i;:::-;434:59;;294:205;;;;;:::o;:::-;304:3436:11;;;;;;",
  "deployedSourceMap": "304:3436:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;331:333:14;;;;;;;;;;-1:-1:-1;331:333:14;;;;;:::i;:::-;;:::i;:::-;;957:92:13;;;;;;;;;;-1:-1:-1;1036:6:13;;-1:-1:-1;;;;;1036:6:13;957:92;;;-1:-1:-1;;;;;3213:32:16;;;3195:51;;3183:2;3168:18;957:92:13;;;;;;;;1081:164:11;;;;;;;;;;-1:-1:-1;1081:164:11;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;647:101:13:-;;;;;;;;;;-1:-1:-1;647:101:13;;;;;:::i;:::-;;:::i;1251:1924:11:-;;;;;;:::i;:::-;;:::i;3181:556::-;;;;;;;;;;-1:-1:-1;3181:556:11;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;614:55:11:-;;;;;;;;;;-1:-1:-1;614:55:11;;;;;:::i;:::-;;:::i;754:105:13:-;;;;;;;;;;-1:-1:-1;754:105:13;;;;;:::i;:::-;;:::i;674:36:11:-;;;;;;;;;;-1:-1:-1;674:36:11;;;;;:::i;:::-;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;865:86:13;;;;;;;;;;-1:-1:-1;865:86:13;;;;;:::i;:::-;;:::i;715:36:11:-;;;;;;;;;;;;;;;;;;;8350:25:16;;;8338:2;8323:18;715:36:11;8305:76:16;1055:92:13;;;;;;;;;;-1:-1:-1;1134:6:13;;-1:-1:-1;;;;;1134:6:13;1055:92;;670:112:14;;;;;;;;;;;;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;961:114:11:-;;;;;;;;;;;;;:::i;415:22:13:-;;;;;;;;;;-1:-1:-1;415:22:13;;;;-1:-1:-1;;;415:22:13;;;;;;;;;8558:4:16;8546:17;;;8528:36;;8516:2;8501:18;415:22:13;8483:87:16;331:333:14;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:7;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;454:10:14;482:11;:55:::1;;506:31;::::0;-1:-1:-1;;;506:31:14;;531:4:::1;506:31;::::0;::::1;3195:51:16::0;-1:-1:-1;;;;;506:16:14;::::1;::::0;::::1;::::0;3168:18:16;;506:31:14::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;482:55;;;496:7;482:55;472:65;;562:1;552:7;:11;544:74;;;::::0;-1:-1:-1;;;544:74:14;;7203:2:16;544:74:14::1;::::0;::::1;7185:21:16::0;7242:2;7222:18;;;7215:30;7281:34;7261:18;;;7254:62;-1:-1:-1;;;7332:18:16;;;7325:48;7390:19;;544:74:14::1;7175:240:16::0;544:74:14::1;625:6;-1:-1:-1::0;;;;;625:15:14::1;;641:7;1082::0::0;1108:6;-1:-1:-1;;;;;1108:6:0;;1036:85;641:7:14::1;625:33;::::0;-1:-1:-1;;;;;;625:33:14::1;::::0;;;;;;-1:-1:-1;;;;;3829:32:16;;;625:33:14::1;::::0;::::1;3811:51:16::0;3878:18;;;3871:34;;;3784:18;;625:33:14::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1318:1:0;331:333:14::0;;:::o;1081:164:11:-;-1:-1:-1;;;;;1206:33:11;;;;;;:18;:33;;;;;;;;;1199:40;;;;;;;;;;;;;;;;;1171:16;;1199:40;;;1206:33;1199:40;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1199:40:11;;;;;;;;;;;;;;;;;;;;;;;1081:164;;;:::o;647:101:13:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:7;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;715:6:13::1;:27:::0;;-1:-1:-1;;;;;;715:27:13::1;-1:-1:-1::0;;;;;715:27:13;;;::::1;::::0;;;::::1;::::0;;647:101::o;1251:1924:11:-;1517:17;1532:1;1517:14;:17::i;:::-;1822:58;;-1:-1:-1;;;1822:58:11;;1845:10;1822:58;;;3497:34:16;1865:4:11;3547:18:16;;;3540:43;3599:18;;;3592:34;;;1701:17:11;;-1:-1:-1;;;;;1822:22:11;;;;;3432:18:16;;1822:58:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2187:34:11;;-1:-1:-1;;;2187:34:11;;2215:4;2187:34;;;3195:51:16;2151:22:11;;-1:-1:-1;;;;;2187:19:11;;;;;3168:18:16;;2187:34:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2176:7;:45;;:106;;2248:34;;-1:-1:-1;;;2248:34:11;;2276:4;2248:34;;;3195:51:16;-1:-1:-1;;;;;2248:19:11;;;;;3168:18:16;;2248:34:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2176:106;;;2231:7;2176:106;2151:131;;2291:23;2388:14;2411:17;2437:16;2462:10;2481:19;2509:16;2534;2559:12;2317:261;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2585:19:11;:44;;;;;;;;;;;;;-1:-1:-1;;;;;2585:44:11;;;-1:-1:-1;;;;;;2585:44:11;;;;;;;;2636:36;;-1:-1:-1;2636:36:11;;;:18;2585:44;2636:36;;;;;;:61;;;;;;;;;;;;;;;;;;;;;;;;2704:21;:23;;2291:287;;-1:-1:-1;2704:21:11;:23;;;:::i;:::-;;;;-1:-1:-1;;2736:54:11;;-1:-1:-1;;;2736:54:11;;-1:-1:-1;;;;;3829:32:16;;;2736:54:11;;;3811:51:16;3878:18;;;3871:34;;;2736:18:11;;;;;3784::16;;2736:54:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2962:39:11;;-1:-1:-1;;;2962:39:11;;-1:-1:-1;;;;;3213:32:16;;;2962:39:11;;;3195:51:16;2914:20:11;;2962:19;;;;;;3168:18:16;;2962:39:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2937:14;:64;;:137;;3035:39;;-1:-1:-1;;;3035:39:11;;-1:-1:-1;;;;;3213:32:16;;;3035:39:11;;;3195:51:16;3035:19:11;;;;;3168:18:16;;3035:39:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2937:137;;;3011:14;2937:137;2914:160;;3103:12;3085:14;:30;3081:89;;3126:36;;-1:-1:-1;;;3126:36:11;;;;;8350:25:16;;;-1:-1:-1;;;;;3126:22:11;;;;;8323:18:16;;3126:36:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3081:89;1251:1924;;;;;;;;;;;:::o;3181:556::-;3250:23;3290:14;3250:55;;3342:9;-1:-1:-1;;;;;3342:20:11;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3328:36:11;:10;-1:-1:-1;;;;;3328:36:11;;3312:124;;;;-1:-1:-1;;;3312:124:11;;7622:2:16;3312:124:11;;;7604:21:16;7661:2;7641:18;;;7634:30;7700:34;7680:18;;;7673:62;-1:-1:-1;;;7751:18:16;;;7744:52;7813:19;;3312:124:11;7594:244:16;3312:124:11;3477:9;-1:-1:-1;;;;;3477:28:11;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3459:15;:48;:96;;;;;3520:9;-1:-1:-1;;;;;3520:28:11;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;;3459:96;3443:216;;;;-1:-1:-1;;;3443:216:11;;6708:2:16;3443:216:11;;;6690:21:16;6747:2;6727:18;;;6720:30;6786:34;6766:18;;;6759:62;6857:34;6837:18;;;6830:62;-1:-1:-1;;;6908:19:16;;;6901:53;6971:19;;3443:216:11;6680:316:16;3443:216:11;3668:9;-1:-1:-1;;;;;3668:31:11;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3708:21:11;:23;;;-1:-1:-1;3708:21:11;-1:-1:-1;3708:21:11;:23;;;:::i;:::-;;;;;;3181:556;;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:7;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;614:55:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;614:55:11;;-1:-1:-1;614:55:11;;-1:-1:-1;614:55:11:o;754:105:13:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:7;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;822:6:13::1;:31:::0;;-1:-1:-1;;;;;;822:31:13::1;-1:-1:-1::0;;;;;822:31:13;;;::::1;::::0;;;::::1;::::0;;754:105::o;674:36:11:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;674:36:11;;-1:-1:-1;674:36:11;:::o;865:86:13:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:7;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;927:9:13::1;:18:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;927:18:13::1;-1:-1:-1::0;;;;927:18:13;;::::1;::::0;;;::::1;::::0;;865:86::o;670:112:14:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:7;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;-1:-1:-1;;;;;719:21:14::1;749;719:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;670:112::o:0;719:57::-:1;-1:-1:-1::0;;;670:112:14:o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:7;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;5070:2:16;1998:73:0::1;::::0;::::1;5052:21:16::0;5109:2;5089:18;;;5082:30;5148:34;5128:18;;;5121:62;-1:-1:-1;;;5199:18:16;;;5192:36;5245:19;;1998:73:0::1;5042:228:16::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;961:114:11:-;1018:16;1050:19;1043:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1043:26:11;;;;;;;;;;;;;;;;;;;;;;;961:114;:::o;1153:186:13:-;1224:6;;-1:-1:-1;;;;;1224:6:13;:21;1254:33;1266:21;1254:9;:33;:::i;:::-;1317:9;;1224:109;;;;;;-1:-1:-1;;;;;;1224:109:13;;;1298:10;1224:109;;;4086:51:16;-1:-1:-1;;;1317:9:13;;;;;4153:18:16;;;4146:45;4059:18;;1224:109:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1153:186;:::o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2270:187;;:::o;-1:-1:-1:-;;;;;;;;:::o;14:257:16:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:31;235:5;210:31;:::i;:::-;260:5;84:187;-1:-1:-1;;;84:187:16:o;276:261::-;346:6;399:2;387:9;378:7;374:23;370:32;367:2;;;420:6;412;405:22;367:2;457:9;451:16;476:31;501:5;476:31;:::i;542:809::-;652:6;660;668;676;684;692;700;753:3;741:9;732:7;728:23;724:33;721:2;;;775:6;767;760:22;721:2;819:9;806:23;838:31;863:5;838:31;:::i;:::-;888:5;-1:-1:-1;945:2:16;930:18;;917:32;958:33;917:32;958:33;:::i;:::-;1010:7;-1:-1:-1;1064:2:16;1049:18;;1036:32;;-1:-1:-1;1115:2:16;1100:18;;1087:32;;-1:-1:-1;1166:3:16;1151:19;;1138:33;;-1:-1:-1;1218:3:16;1203:19;;1190:33;;-1:-1:-1;1275:3:16;1260:19;;1247:33;1289:30;1247:33;1289:30;:::i;:::-;1338:7;1328:17;;;711:640;;;;;;;;;;:::o;1356:325::-;1424:6;1432;1485:2;1473:9;1464:7;1460:23;1456:32;1453:2;;;1506:6;1498;1491:22;1453:2;1550:9;1537:23;1569:31;1594:5;1569:31;:::i;:::-;1619:5;1671:2;1656:18;;;;1643:32;;-1:-1:-1;;;1443:238:16:o;1686:255::-;1753:6;1806:2;1794:9;1785:7;1781:23;1777:32;1774:2;;;1827:6;1819;1812:22;1774:2;1864:9;1858:16;1883:28;1905:5;1883:28;:::i;1946:190::-;2005:6;2058:2;2046:9;2037:7;2033:23;2029:32;2026:2;;;2079:6;2071;2064:22;2026:2;-1:-1:-1;2107:23:16;;2016:120;-1:-1:-1;2016:120:16:o;2141:194::-;2211:6;2264:2;2252:9;2243:7;2239:23;2235:32;2232:2;;;2285:6;2277;2270:22;2232:2;-1:-1:-1;2313:16:16;;2222:113;-1:-1:-1;2222:113:16:o;2340:289::-;2397:6;2450:2;2438:9;2429:7;2425:23;2421:32;2418:2;;;2471:6;2463;2456:22;2418:2;2515:9;2502:23;2565:4;2558:5;2554:16;2547:5;2544:27;2534:2;;2590:6;2582;2575:22;4202:661;4373:2;4425:21;;;4495:13;;4398:18;;;4517:22;;;4344:4;;4373:2;4596:15;;;;4570:2;4555:18;;;4344:4;4642:195;4656:6;4653:1;4650:13;4642:195;;;4721:13;;-1:-1:-1;;;;;4717:39:16;4705:52;;4812:15;;;;4777:12;;;;4753:1;4671:9;4642:195;;;-1:-1:-1;4854:3:16;;4353:510;-1:-1:-1;;;;;;4353:510:16:o;5275:1226::-;5788:3;5800:21;;;5857:2;5837:18;;;5830:30;-1:-1:-1;;;5891:3:16;5876:19;;5869:49;5937:3;5971:4;5956:20;;5949:32;;;6017:1;5997:18;;;5990:29;-1:-1:-1;;;6050:3:16;6035:19;;6028:36;6131:2;6116:18;;6109:34;;;-1:-1:-1;;;;;2700:31:16;;6194:2;6179:18;;2688:44;6096:3;6081:19;;-1:-1:-1;;;;;2700:31:16;;6249:3;6234:19;;2688:44;-1:-1:-1;;;;;2700:31:16;;6305:3;6290:19;;2688:44;6347:6;6341:3;6330:9;6326:19;6319:35;6391:6;6385:3;6374:9;6370:19;6363:35;6435:6;6429:3;6418:9;6414:19;6407:35;6451:44;6490:3;6479:9;6475:19;6467:6;2813:13;2806:21;2794:34;;2784:50;6451:44;5768:733;;;;;;;;;;;:::o;7843:356::-;8045:2;8027:21;;;8064:18;;;8057:30;8123:34;8118:2;8103:18;;8096:62;8190:2;8175:18;;8017:182::o;8575:125::-;8615:4;8643:1;8640;8637:8;8634:2;;;8648:18;;:::i;:::-;-1:-1:-1;8685:9:16;;8624:76::o;8705:136::-;8744:3;8772:5;8762:2;;8781:18;;:::i;:::-;-1:-1:-1;;;8817:18:16;;8752:89::o;8846:135::-;8885:3;-1:-1:-1;;8906:17:16;;8903:2;;;8926:18;;:::i;:::-;-1:-1:-1;8973:1:16;8962:13;;8893:88::o;8986:127::-;9047:10;9042:3;9038:20;9035:1;9028:31;9078:4;9075:1;9068:15;9102:4;9099:1;9092:15;9118:131;-1:-1:-1;;;;;9193:31:16;;9183:42;;9173:2;;9239:1;9236;9229:12;9254:118;9340:5;9333:13;9326:21;9319:5;9316:32;9306:2;;9362:1;9359;9352:12",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport './HEALFaaSToken.sol';\r\nimport './HEALProduct.sol';\r\n\r\n/**\r\n * @title HEALFaaS (sHEAL)\r\n * @author Lance Whatley\r\n * @notice Implements the master FaaS contract to keep track of all tokens being added\r\n * to be staked and staking.\r\n */\r\ncontract HEALFaaS is HEALProduct {\r\n  // this is a mapping of tokenAddress => contractAddress[] that represents\r\n  // a particular address for the token that someone has put up\r\n  // to be staked and a list of contract addresses for the staking token\r\n  // contracts paying out stakers for the given token.\r\n  mapping(address => address[]) public tokensUpForStaking;\r\n  address[] public allFarmingContracts;\r\n  uint256 public totalStakingContracts;\r\n\r\n  /**\r\n   * @notice The constructor for the staking master contract.\r\n   */\r\n  constructor(address _tokenAddress, address _spendAddress)\r\n    HEALProduct(uint8(8), _tokenAddress, _spendAddress)\r\n  {}\r\n\r\n  function getAllFarmingContracts() external view returns (address[] memory) {\r\n    return allFarmingContracts;\r\n  }\r\n\r\n  function getTokensForStaking(address _tokenAddress)\r\n    external\r\n    view\r\n    returns (address[] memory)\r\n  {\r\n    return tokensUpForStaking[_tokenAddress];\r\n  }\r\n\r\n  function createNewTokenContract(\r\n    address _rewardsTokenAddy,\r\n    address _stakedTokenAddy,\r\n    uint256 _supply,\r\n    uint256 _perBlockAllocation,\r\n    uint256 _lockedUntilDate,\r\n    uint256 _timelockSeconds,\r\n    bool _isStakedNft\r\n  ) external payable {\r\n    _payForService(0);\r\n\r\n    // create new HEALFaaSToken contract which will serve as the core place for\r\n    // users to stake their tokens and earn rewards\r\n    ERC20 _rewToken = ERC20(_rewardsTokenAddy);\r\n\r\n    // Send the new contract all the tokens from the sending user to be staked and harvested\r\n    _rewToken.transferFrom(msg.sender, address(this), _supply);\r\n\r\n    // in order to handle tokens that take tax, are burned, etc. when transferring, need to get\r\n    // the user's balance after transferring in order to send the remainder of the tokens\r\n    // instead of the full original supply. Similar to slippage on a DEX\r\n    uint256 _updatedSupply = _supply <= _rewToken.balanceOf(address(this))\r\n      ? _supply\r\n      : _rewToken.balanceOf(address(this));\r\n\r\n    HEALFaaSToken _contract = new HEALFaaSToken(\r\n      'HEAL Staking Token',\r\n      'sHEAL',\r\n      _updatedSupply,\r\n      _rewardsTokenAddy,\r\n      _stakedTokenAddy,\r\n      msg.sender,\r\n      _perBlockAllocation,\r\n      _lockedUntilDate,\r\n      _timelockSeconds,\r\n      _isStakedNft\r\n    );\r\n    allFarmingContracts.push(address(_contract));\r\n    tokensUpForStaking[_stakedTokenAddy].push(address(_contract));\r\n    totalStakingContracts++;\r\n\r\n    _rewToken.transfer(address(_contract), _updatedSupply);\r\n\r\n    // do one more double check on balance of rewards token\r\n    // in the staking contract and update if need be\r\n    uint256 _finalSupply = _updatedSupply <=\r\n      _rewToken.balanceOf(address(_contract))\r\n      ? _updatedSupply\r\n      : _rewToken.balanceOf(address(_contract));\r\n    if (_updatedSupply != _finalSupply) {\r\n      _contract.updateSupply(_finalSupply);\r\n    }\r\n  }\r\n\r\n  function removeTokenContract(address _faasTokenAddy) external {\r\n    HEALFaaSToken _contract = HEALFaaSToken(_faasTokenAddy);\r\n    require(\r\n      msg.sender == _contract.tokenOwner(),\r\n      'user must be the original token owner to remove tokens'\r\n    );\r\n    require(\r\n      block.timestamp > _contract.getLockedUntilDate() &&\r\n        _contract.getLockedUntilDate() != 0,\r\n      'it must be after the locked time the user originally configured and not locked forever'\r\n    );\r\n\r\n    _contract.removeStakeableTokens();\r\n    totalStakingContracts--;\r\n  }\r\n}",
  "sourcePath": "D:\\Working\\Freelancing\\6.heal\\Project\\backend\\contracts\\HEALFaaS.sol",
  "ast": {
    "absolutePath": "project:/contracts/HEALFaaS.sol",
    "exportedSymbols": {
      "Context": [
        939
      ],
      "ERC20": [
        698
      ],
      "HEALFaaS": [
        3029
      ],
      "HEALFaaSToken": [
        4258
      ],
      "HEALProduct": [
        4382
      ],
      "HEALWithdrawable": [
        4458
      ],
      "IERC165": [
        951
      ],
      "IERC20": [
        776
      ],
      "IERC20Metadata": [
        801
      ],
      "IERC721": [
        917
      ],
      "IHEALSpend": [
        4469
      ],
      "Ownable": [
        104
      ],
      "SafeMath": [
        1263
      ]
    },
    "id": 3030,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2782,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:11"
      },
      {
        "absolutePath": "project:/contracts/HEALFaaSToken.sol",
        "file": "./HEALFaaSToken.sol",
        "id": 2783,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3030,
        "sourceUnit": 4259,
        "src": "60:29:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/HEALProduct.sol",
        "file": "./HEALProduct.sol",
        "id": 2784,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3030,
        "sourceUnit": 4383,
        "src": "91:27:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2786,
              "name": "HEALProduct",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4382,
              "src": "325:11:11"
            },
            "id": 2787,
            "nodeType": "InheritanceSpecifier",
            "src": "325:11:11"
          }
        ],
        "contractDependencies": [
          4258
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2785,
          "nodeType": "StructuredDocumentation",
          "src": "122:180:11",
          "text": " @title HEALFaaS (sHEAL)\n @author Lance Whatley\n @notice Implements the master FaaS contract to keep track of all tokens being added\n to be staked and staking."
        },
        "fullyImplemented": true,
        "id": 3029,
        "linearizedBaseContracts": [
          3029,
          4382,
          4458,
          104,
          939
        ],
        "name": "HEALFaaS",
        "nameLocation": "313:8:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "7614d4e2",
            "id": 2792,
            "mutability": "mutable",
            "name": "tokensUpForStaking",
            "nameLocation": "651:18:11",
            "nodeType": "VariableDeclaration",
            "scope": 3029,
            "src": "614:55:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 2791,
              "keyType": {
                "id": 2788,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "622:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "614:29:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 2789,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "633:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 2790,
                "nodeType": "ArrayTypeName",
                "src": "633:9:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "842a84bf",
            "id": 2795,
            "mutability": "mutable",
            "name": "allFarmingContracts",
            "nameLocation": "691:19:11",
            "nodeType": "VariableDeclaration",
            "scope": 3029,
            "src": "674:36:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 2793,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "674:7:11",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 2794,
              "nodeType": "ArrayTypeName",
              "src": "674:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b1e6cb82",
            "id": 2797,
            "mutability": "mutable",
            "name": "totalStakingContracts",
            "nameLocation": "730:21:11",
            "nodeType": "VariableDeclaration",
            "scope": 3029,
            "src": "715:36:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2796,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "715:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2813,
              "nodeType": "Block",
              "src": "953:2:11",
              "statements": []
            },
            "documentation": {
              "id": 2798,
              "nodeType": "StructuredDocumentation",
              "src": "758:73:11",
              "text": " @notice The constructor for the staking master contract."
            },
            "id": 2814,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "hexValue": "38",
                        "id": 2807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "916:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        },
                        "value": "8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        }
                      ],
                      "id": 2806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "910:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 2805,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "910:5:11",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "910:8:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "id": 2809,
                    "name": "_tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2800,
                    "src": "920:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 2810,
                    "name": "_spendAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2802,
                    "src": "935:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2811,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2804,
                  "name": "HEALProduct",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4382,
                  "src": "898:11:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "898:51:11"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2800,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "855:13:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2814,
                  "src": "847:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2799,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2802,
                  "mutability": "mutable",
                  "name": "_spendAddress",
                  "nameLocation": "878:13:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2814,
                  "src": "870:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2801,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "870:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "846:46:11"
            },
            "returnParameters": {
              "id": 2812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "953:0:11"
            },
            "scope": 3029,
            "src": "835:120:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2822,
              "nodeType": "Block",
              "src": "1036:39:11",
              "statements": [
                {
                  "expression": {
                    "id": 2820,
                    "name": "allFarmingContracts",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2795,
                    "src": "1050:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2819,
                  "id": 2821,
                  "nodeType": "Return",
                  "src": "1043:26:11"
                }
              ]
            },
            "functionSelector": "f3c8f799",
            "id": 2823,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllFarmingContracts",
            "nameLocation": "970:22:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "992:2:11"
            },
            "returnParameters": {
              "id": 2819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2818,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2823,
                  "src": "1018:16:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2816,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1018:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2817,
                    "nodeType": "ArrayTypeName",
                    "src": "1018:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1017:18:11"
            },
            "scope": 3029,
            "src": "961:114:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2835,
              "nodeType": "Block",
              "src": "1192:53:11",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2831,
                      "name": "tokensUpForStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2792,
                      "src": "1206:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 2833,
                    "indexExpression": {
                      "id": 2832,
                      "name": "_tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2825,
                      "src": "1225:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1206:33:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2830,
                  "id": 2834,
                  "nodeType": "Return",
                  "src": "1199:40:11"
                }
              ]
            },
            "functionSelector": "1638a085",
            "id": 2836,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokensForStaking",
            "nameLocation": "1090:19:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2825,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "1118:13:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2836,
                  "src": "1110:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2824,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1110:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1109:23:11"
            },
            "returnParameters": {
              "id": 2830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2829,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2836,
                  "src": "1171:16:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2827,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1171:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2828,
                    "nodeType": "ArrayTypeName",
                    "src": "1171:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1170:18:11"
            },
            "scope": 3029,
            "src": "1081:164:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2980,
              "nodeType": "Block",
              "src": "1510:1665:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 2854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1532:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 2853,
                      "name": "_payForService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4381,
                      "src": "1517:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1517:17:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2856,
                  "nodeType": "ExpressionStatement",
                  "src": "1517:17:11"
                },
                {
                  "assignments": [
                    2859
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2859,
                      "mutability": "mutable",
                      "name": "_rewToken",
                      "nameLocation": "1683:9:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2980,
                      "src": "1677:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$698",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 2858,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2857,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 698,
                          "src": "1677:5:11"
                        },
                        "referencedDeclaration": 698,
                        "src": "1677:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$698",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2863,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2861,
                        "name": "_rewardsTokenAddy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2838,
                        "src": "1701:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2860,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 698,
                      "src": "1695:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$698_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 2862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1695:24:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$698",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1677:42:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2867,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1845:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1845:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2871,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1865:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HEALFaaS_$3029",
                              "typeString": "contract HEALFaaS"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HEALFaaS_$3029",
                              "typeString": "contract HEALFaaS"
                            }
                          ],
                          "id": 2870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1857:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2869,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1857:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1857:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2873,
                        "name": "_supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2842,
                        "src": "1872:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2864,
                        "name": "_rewToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2859,
                        "src": "1822:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$698",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 2866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 310,
                      "src": "1822:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1822:58:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2875,
                  "nodeType": "ExpressionStatement",
                  "src": "1822:58:11"
                },
                {
                  "assignments": [
                    2877
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2877,
                      "mutability": "mutable",
                      "name": "_updatedSupply",
                      "nameLocation": "2159:14:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2980,
                      "src": "2151:22:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2876,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2151:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2896,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2878,
                        "name": "_supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2842,
                        "src": "2176:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 2883,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "2215:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_HEALFaaS_$3029",
                                  "typeString": "contract HEALFaaS"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_HEALFaaS_$3029",
                                  "typeString": "contract HEALFaaS"
                                }
                              ],
                              "id": 2882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2207:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2881,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2207:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2207:13:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2879,
                            "name": "_rewToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2859,
                            "src": "2187:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$698",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 2880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 209,
                          "src": "2187:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 2885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2187:34:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2176:45:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 2892,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2276:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HEALFaaS_$3029",
                                "typeString": "contract HEALFaaS"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_HEALFaaS_$3029",
                                "typeString": "contract HEALFaaS"
                              }
                            ],
                            "id": 2891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2268:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2890,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2268:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2268:13:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 2888,
                          "name": "_rewToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2859,
                          "src": "2248:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$698",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 2889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 209,
                        "src": "2248:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 2894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2248:34:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2176:106:11",
                    "trueExpression": {
                      "id": 2887,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2842,
                      "src": "2231:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2151:131:11"
                },
                {
                  "assignments": [
                    2899
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2899,
                      "mutability": "mutable",
                      "name": "_contract",
                      "nameLocation": "2305:9:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2980,
                      "src": "2291:23:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                        "typeString": "contract HEALFaaSToken"
                      },
                      "typeName": {
                        "id": 2898,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2897,
                          "name": "HEALFaaSToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4258,
                          "src": "2291:13:11"
                        },
                        "referencedDeclaration": 4258,
                        "src": "2291:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                          "typeString": "contract HEALFaaSToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2915,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4845414c205374616b696e6720546f6b656e",
                        "id": 2903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2343:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_256d2276fb89ab3bebc4eb7994cd6270572b2a43b40adf07e2055e66ee8ea9ed",
                          "typeString": "literal_string \"HEAL Staking Token\""
                        },
                        "value": "HEAL Staking Token"
                      },
                      {
                        "hexValue": "734845414c",
                        "id": 2904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2372:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_83f47ecf9d2c1c04057647ee2d51efaa3bdc853be89007d8d461f8123f99bb33",
                          "typeString": "literal_string \"sHEAL\""
                        },
                        "value": "sHEAL"
                      },
                      {
                        "id": 2905,
                        "name": "_updatedSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2877,
                        "src": "2388:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2906,
                        "name": "_rewardsTokenAddy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2838,
                        "src": "2411:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2907,
                        "name": "_stakedTokenAddy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2840,
                        "src": "2437:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2908,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2462:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2462:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2910,
                        "name": "_perBlockAllocation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2844,
                        "src": "2481:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2911,
                        "name": "_lockedUntilDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2846,
                        "src": "2509:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2912,
                        "name": "_timelockSeconds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2848,
                        "src": "2534:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2913,
                        "name": "_isStakedNft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2850,
                        "src": "2559:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_256d2276fb89ab3bebc4eb7994cd6270572b2a43b40adf07e2055e66ee8ea9ed",
                          "typeString": "literal_string \"HEAL Staking Token\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_83f47ecf9d2c1c04057647ee2d51efaa3bdc853be89007d8d461f8123f99bb33",
                          "typeString": "literal_string \"sHEAL\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2317:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_contract$_HEALFaaSToken_$4258_$",
                        "typeString": "function (string memory,string memory,uint256,address,address,address,uint256,uint256,uint256,bool) returns (contract HEALFaaSToken)"
                      },
                      "typeName": {
                        "id": 2901,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2900,
                          "name": "HEALFaaSToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4258,
                          "src": "2321:13:11"
                        },
                        "referencedDeclaration": 4258,
                        "src": "2321:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                          "typeString": "contract HEALFaaSToken"
                        }
                      }
                    },
                    "id": 2914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2317:261:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                      "typeString": "contract HEALFaaSToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2291:287:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2921,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2899,
                            "src": "2618:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                              "typeString": "contract HEALFaaSToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                              "typeString": "contract HEALFaaSToken"
                            }
                          ],
                          "id": 2920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2610:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2919,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2610:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2610:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2916,
                        "name": "allFarmingContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2795,
                        "src": "2585:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2585:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 2923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2585:44:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2924,
                  "nodeType": "ExpressionStatement",
                  "src": "2585:44:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2931,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2899,
                            "src": "2686:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                              "typeString": "contract HEALFaaSToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                              "typeString": "contract HEALFaaSToken"
                            }
                          ],
                          "id": 2930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2678:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2929,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2678:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2678:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 2925,
                          "name": "tokensUpForStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2792,
                          "src": "2636:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 2927,
                        "indexExpression": {
                          "id": 2926,
                          "name": "_stakedTokenAddy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2840,
                          "src": "2655:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2636:36:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2636:41:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 2933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2636:61:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2934,
                  "nodeType": "ExpressionStatement",
                  "src": "2636:61:11"
                },
                {
                  "expression": {
                    "id": 2936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2704:23:11",
                    "subExpression": {
                      "id": 2935,
                      "name": "totalStakingContracts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2797,
                      "src": "2704:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2937,
                  "nodeType": "ExpressionStatement",
                  "src": "2704:23:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2943,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2899,
                            "src": "2763:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                              "typeString": "contract HEALFaaSToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                              "typeString": "contract HEALFaaSToken"
                            }
                          ],
                          "id": 2942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2755:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2941,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2755:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2755:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2945,
                        "name": "_updatedSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2877,
                        "src": "2775:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2938,
                        "name": "_rewToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2859,
                        "src": "2736:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$698",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 2940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 234,
                      "src": "2736:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2736:54:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2947,
                  "nodeType": "ExpressionStatement",
                  "src": "2736:54:11"
                },
                {
                  "assignments": [
                    2949
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2949,
                      "mutability": "mutable",
                      "name": "_finalSupply",
                      "nameLocation": "2922:12:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2980,
                      "src": "2914:20:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2948,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2914:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2968,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2950,
                        "name": "_updatedSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2877,
                        "src": "2937:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 2955,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2899,
                                "src": "2990:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                                  "typeString": "contract HEALFaaSToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                                  "typeString": "contract HEALFaaSToken"
                                }
                              ],
                              "id": 2954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2982:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2953,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2982:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2982:18:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2951,
                            "name": "_rewToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2859,
                            "src": "2962:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$698",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 2952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 209,
                          "src": "2962:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 2957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2962:39:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2937:64:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 2964,
                              "name": "_contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2899,
                              "src": "3063:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                                "typeString": "contract HEALFaaSToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                                "typeString": "contract HEALFaaSToken"
                              }
                            ],
                            "id": 2963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3055:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2962,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3055:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3055:18:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 2960,
                          "name": "_rewToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2859,
                          "src": "3035:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$698",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 2961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 209,
                        "src": "3035:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 2966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3035:39:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2937:137:11",
                    "trueExpression": {
                      "id": 2959,
                      "name": "_updatedSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2877,
                      "src": "3011:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2914:160:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2969,
                      "name": "_updatedSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2877,
                      "src": "3085:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 2970,
                      "name": "_finalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2949,
                      "src": "3103:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3085:30:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2979,
                  "nodeType": "IfStatement",
                  "src": "3081:89:11",
                  "trueBody": {
                    "id": 2978,
                    "nodeType": "Block",
                    "src": "3117:53:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2975,
                              "name": "_finalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2949,
                              "src": "3149:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2972,
                              "name": "_contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2899,
                              "src": "3126:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                                "typeString": "contract HEALFaaSToken"
                              }
                            },
                            "id": 2974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "updateSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3246,
                            "src": "3126:22:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 2976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3126:36:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2977,
                        "nodeType": "ExpressionStatement",
                        "src": "3126:36:11"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "51dd8dd0",
            "id": 2981,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNewTokenContract",
            "nameLocation": "1260:22:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2838,
                  "mutability": "mutable",
                  "name": "_rewardsTokenAddy",
                  "nameLocation": "1297:17:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2981,
                  "src": "1289:25:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2837,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1289:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2840,
                  "mutability": "mutable",
                  "name": "_stakedTokenAddy",
                  "nameLocation": "1329:16:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2981,
                  "src": "1321:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1321:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2842,
                  "mutability": "mutable",
                  "name": "_supply",
                  "nameLocation": "1360:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2981,
                  "src": "1352:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1352:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2844,
                  "mutability": "mutable",
                  "name": "_perBlockAllocation",
                  "nameLocation": "1382:19:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2981,
                  "src": "1374:27:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2843,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1374:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2846,
                  "mutability": "mutable",
                  "name": "_lockedUntilDate",
                  "nameLocation": "1416:16:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2981,
                  "src": "1408:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1408:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2848,
                  "mutability": "mutable",
                  "name": "_timelockSeconds",
                  "nameLocation": "1447:16:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2981,
                  "src": "1439:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1439:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2850,
                  "mutability": "mutable",
                  "name": "_isStakedNft",
                  "nameLocation": "1475:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2981,
                  "src": "1470:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2849,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1470:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1282:210:11"
            },
            "returnParameters": {
              "id": 2852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1510:0:11"
            },
            "scope": 3029,
            "src": "1251:1924:11",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3027,
              "nodeType": "Block",
              "src": "3243:494:11",
              "statements": [
                {
                  "assignments": [
                    2988
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2988,
                      "mutability": "mutable",
                      "name": "_contract",
                      "nameLocation": "3264:9:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3027,
                      "src": "3250:23:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                        "typeString": "contract HEALFaaSToken"
                      },
                      "typeName": {
                        "id": 2987,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2986,
                          "name": "HEALFaaSToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4258,
                          "src": "3250:13:11"
                        },
                        "referencedDeclaration": 4258,
                        "src": "3250:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                          "typeString": "contract HEALFaaSToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2992,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2990,
                        "name": "_faasTokenAddy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2983,
                        "src": "3290:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2989,
                      "name": "HEALFaaSToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4258,
                      "src": "3276:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_HEALFaaSToken_$4258_$",
                        "typeString": "type(contract HEALFaaSToken)"
                      }
                    },
                    "id": 2991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3276:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                      "typeString": "contract HEALFaaSToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3250:55:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2994,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3328:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3328:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2996,
                              "name": "_contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2988,
                              "src": "3342:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                                "typeString": "contract HEALFaaSToken"
                              }
                            },
                            "id": 2997,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3284,
                            "src": "3342:20:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 2998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3342:22:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3328:36:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "75736572206d75737420626520746865206f726967696e616c20746f6b656e206f776e657220746f2072656d6f766520746f6b656e73",
                        "id": 3000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3373:56:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_66d5f61e90fc7ada073db45873bd81ed1e58c3f1ff38a23c7035dc3bdee09d87",
                          "typeString": "literal_string \"user must be the original token owner to remove tokens\""
                        },
                        "value": "user must be the original token owner to remove tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_66d5f61e90fc7ada073db45873bd81ed1e58c3f1ff38a23c7035dc3bdee09d87",
                          "typeString": "literal_string \"user must be the original token owner to remove tokens\""
                        }
                      ],
                      "id": 2993,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3312:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3312:124:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3002,
                  "nodeType": "ExpressionStatement",
                  "src": "3312:124:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3004,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "3459:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3459:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 3006,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2988,
                                "src": "3477:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                                  "typeString": "contract HEALFaaSToken"
                                }
                              },
                              "id": 3007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getLockedUntilDate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3293,
                              "src": "3477:28:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 3008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3477:30:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3459:48:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 3010,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2988,
                                "src": "3520:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                                  "typeString": "contract HEALFaaSToken"
                                }
                              },
                              "id": 3011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getLockedUntilDate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3293,
                              "src": "3520:28:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 3012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3520:30:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3013,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3554:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3520:35:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3459:96:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6974206d75737420626520616674657220746865206c6f636b65642074696d65207468652075736572206f726967696e616c6c7920636f6e6669677572656420616e64206e6f74206c6f636b656420666f7265766572",
                        "id": 3016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3564:88:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28e953ae3adb1a30badea18e423c357c898a37bafb2b9f1266f0238b14c075f6",
                          "typeString": "literal_string \"it must be after the locked time the user originally configured and not locked forever\""
                        },
                        "value": "it must be after the locked time the user originally configured and not locked forever"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28e953ae3adb1a30badea18e423c357c898a37bafb2b9f1266f0238b14c075f6",
                          "typeString": "literal_string \"it must be after the locked time the user originally configured and not locked forever\""
                        }
                      ],
                      "id": 3003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3443:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3443:216:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3018,
                  "nodeType": "ExpressionStatement",
                  "src": "3443:216:11"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 3019,
                        "name": "_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2988,
                        "src": "3668:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                          "typeString": "contract HEALFaaSToken"
                        }
                      },
                      "id": 3021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeStakeableTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3331,
                      "src": "3668:31:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 3022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3668:33:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3023,
                  "nodeType": "ExpressionStatement",
                  "src": "3668:33:11"
                },
                {
                  "expression": {
                    "id": 3025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "--",
                    "prefix": false,
                    "src": "3708:23:11",
                    "subExpression": {
                      "id": 3024,
                      "name": "totalStakingContracts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2797,
                      "src": "3708:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3026,
                  "nodeType": "ExpressionStatement",
                  "src": "3708:23:11"
                }
              ]
            },
            "functionSelector": "571d959d",
            "id": 3028,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeTokenContract",
            "nameLocation": "3190:19:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2983,
                  "mutability": "mutable",
                  "name": "_faasTokenAddy",
                  "nameLocation": "3218:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3028,
                  "src": "3210:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2982,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3210:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3209:24:11"
            },
            "returnParameters": {
              "id": 2985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3243:0:11"
            },
            "scope": 3029,
            "src": "3181:556:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3030,
        "src": "304:3436:11",
        "usedErrors": []
      }
    ],
    "src": "33:3707:11"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/HEALFaaS.sol",
    "exportedSymbols": {
      "Context": [
        939
      ],
      "ERC20": [
        698
      ],
      "HEALFaaS": [
        3029
      ],
      "HEALFaaSToken": [
        4258
      ],
      "HEALProduct": [
        4382
      ],
      "HEALWithdrawable": [
        4458
      ],
      "IERC165": [
        951
      ],
      "IERC20": [
        776
      ],
      "IERC20Metadata": [
        801
      ],
      "IERC721": [
        917
      ],
      "IHEALSpend": [
        4469
      ],
      "Ownable": [
        104
      ],
      "SafeMath": [
        1263
      ]
    },
    "id": 3030,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2782,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:11"
      },
      {
        "absolutePath": "project:/contracts/HEALFaaSToken.sol",
        "file": "./HEALFaaSToken.sol",
        "id": 2783,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3030,
        "sourceUnit": 4259,
        "src": "60:29:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/HEALProduct.sol",
        "file": "./HEALProduct.sol",
        "id": 2784,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3030,
        "sourceUnit": 4383,
        "src": "91:27:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2786,
              "name": "HEALProduct",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4382,
              "src": "325:11:11"
            },
            "id": 2787,
            "nodeType": "InheritanceSpecifier",
            "src": "325:11:11"
          }
        ],
        "contractDependencies": [
          4258
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2785,
          "nodeType": "StructuredDocumentation",
          "src": "122:180:11",
          "text": " @title HEALFaaS (sHEAL)\n @author Lance Whatley\n @notice Implements the master FaaS contract to keep track of all tokens being added\n to be staked and staking."
        },
        "fullyImplemented": true,
        "id": 3029,
        "linearizedBaseContracts": [
          3029,
          4382,
          4458,
          104,
          939
        ],
        "name": "HEALFaaS",
        "nameLocation": "313:8:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "7614d4e2",
            "id": 2792,
            "mutability": "mutable",
            "name": "tokensUpForStaking",
            "nameLocation": "651:18:11",
            "nodeType": "VariableDeclaration",
            "scope": 3029,
            "src": "614:55:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 2791,
              "keyType": {
                "id": 2788,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "622:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "614:29:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 2789,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "633:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 2790,
                "nodeType": "ArrayTypeName",
                "src": "633:9:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "842a84bf",
            "id": 2795,
            "mutability": "mutable",
            "name": "allFarmingContracts",
            "nameLocation": "691:19:11",
            "nodeType": "VariableDeclaration",
            "scope": 3029,
            "src": "674:36:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 2793,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "674:7:11",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 2794,
              "nodeType": "ArrayTypeName",
              "src": "674:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b1e6cb82",
            "id": 2797,
            "mutability": "mutable",
            "name": "totalStakingContracts",
            "nameLocation": "730:21:11",
            "nodeType": "VariableDeclaration",
            "scope": 3029,
            "src": "715:36:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2796,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "715:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2813,
              "nodeType": "Block",
              "src": "953:2:11",
              "statements": []
            },
            "documentation": {
              "id": 2798,
              "nodeType": "StructuredDocumentation",
              "src": "758:73:11",
              "text": " @notice The constructor for the staking master contract."
            },
            "id": 2814,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "hexValue": "38",
                        "id": 2807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "916:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        },
                        "value": "8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        }
                      ],
                      "id": 2806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "910:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 2805,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "910:5:11",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "910:8:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "id": 2809,
                    "name": "_tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2800,
                    "src": "920:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 2810,
                    "name": "_spendAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2802,
                    "src": "935:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2811,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2804,
                  "name": "HEALProduct",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4382,
                  "src": "898:11:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "898:51:11"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2800,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "855:13:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2814,
                  "src": "847:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2799,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2802,
                  "mutability": "mutable",
                  "name": "_spendAddress",
                  "nameLocation": "878:13:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2814,
                  "src": "870:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2801,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "870:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "846:46:11"
            },
            "returnParameters": {
              "id": 2812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "953:0:11"
            },
            "scope": 3029,
            "src": "835:120:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2822,
              "nodeType": "Block",
              "src": "1036:39:11",
              "statements": [
                {
                  "expression": {
                    "id": 2820,
                    "name": "allFarmingContracts",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2795,
                    "src": "1050:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2819,
                  "id": 2821,
                  "nodeType": "Return",
                  "src": "1043:26:11"
                }
              ]
            },
            "functionSelector": "f3c8f799",
            "id": 2823,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllFarmingContracts",
            "nameLocation": "970:22:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "992:2:11"
            },
            "returnParameters": {
              "id": 2819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2818,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2823,
                  "src": "1018:16:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2816,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1018:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2817,
                    "nodeType": "ArrayTypeName",
                    "src": "1018:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1017:18:11"
            },
            "scope": 3029,
            "src": "961:114:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2835,
              "nodeType": "Block",
              "src": "1192:53:11",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2831,
                      "name": "tokensUpForStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2792,
                      "src": "1206:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 2833,
                    "indexExpression": {
                      "id": 2832,
                      "name": "_tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2825,
                      "src": "1225:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1206:33:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2830,
                  "id": 2834,
                  "nodeType": "Return",
                  "src": "1199:40:11"
                }
              ]
            },
            "functionSelector": "1638a085",
            "id": 2836,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokensForStaking",
            "nameLocation": "1090:19:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2825,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "1118:13:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2836,
                  "src": "1110:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2824,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1110:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1109:23:11"
            },
            "returnParameters": {
              "id": 2830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2829,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2836,
                  "src": "1171:16:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2827,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1171:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2828,
                    "nodeType": "ArrayTypeName",
                    "src": "1171:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1170:18:11"
            },
            "scope": 3029,
            "src": "1081:164:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2980,
              "nodeType": "Block",
              "src": "1510:1665:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 2854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1532:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 2853,
                      "name": "_payForService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4381,
                      "src": "1517:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1517:17:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2856,
                  "nodeType": "ExpressionStatement",
                  "src": "1517:17:11"
                },
                {
                  "assignments": [
                    2859
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2859,
                      "mutability": "mutable",
                      "name": "_rewToken",
                      "nameLocation": "1683:9:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2980,
                      "src": "1677:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$698",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 2858,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2857,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 698,
                          "src": "1677:5:11"
                        },
                        "referencedDeclaration": 698,
                        "src": "1677:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$698",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2863,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2861,
                        "name": "_rewardsTokenAddy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2838,
                        "src": "1701:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2860,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 698,
                      "src": "1695:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$698_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 2862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1695:24:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$698",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1677:42:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2867,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1845:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1845:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2871,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1865:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HEALFaaS_$3029",
                              "typeString": "contract HEALFaaS"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HEALFaaS_$3029",
                              "typeString": "contract HEALFaaS"
                            }
                          ],
                          "id": 2870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1857:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2869,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1857:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1857:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2873,
                        "name": "_supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2842,
                        "src": "1872:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2864,
                        "name": "_rewToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2859,
                        "src": "1822:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$698",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 2866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 310,
                      "src": "1822:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1822:58:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2875,
                  "nodeType": "ExpressionStatement",
                  "src": "1822:58:11"
                },
                {
                  "assignments": [
                    2877
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2877,
                      "mutability": "mutable",
                      "name": "_updatedSupply",
                      "nameLocation": "2159:14:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2980,
                      "src": "2151:22:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2876,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2151:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2896,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2878,
                        "name": "_supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2842,
                        "src": "2176:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 2883,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "2215:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_HEALFaaS_$3029",
                                  "typeString": "contract HEALFaaS"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_HEALFaaS_$3029",
                                  "typeString": "contract HEALFaaS"
                                }
                              ],
                              "id": 2882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2207:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2881,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2207:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2207:13:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2879,
                            "name": "_rewToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2859,
                            "src": "2187:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$698",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 2880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 209,
                          "src": "2187:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 2885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2187:34:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2176:45:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 2892,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2276:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HEALFaaS_$3029",
                                "typeString": "contract HEALFaaS"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_HEALFaaS_$3029",
                                "typeString": "contract HEALFaaS"
                              }
                            ],
                            "id": 2891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2268:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2890,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2268:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2268:13:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 2888,
                          "name": "_rewToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2859,
                          "src": "2248:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$698",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 2889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 209,
                        "src": "2248:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 2894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2248:34:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2176:106:11",
                    "trueExpression": {
                      "id": 2887,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2842,
                      "src": "2231:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2151:131:11"
                },
                {
                  "assignments": [
                    2899
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2899,
                      "mutability": "mutable",
                      "name": "_contract",
                      "nameLocation": "2305:9:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2980,
                      "src": "2291:23:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                        "typeString": "contract HEALFaaSToken"
                      },
                      "typeName": {
                        "id": 2898,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2897,
                          "name": "HEALFaaSToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4258,
                          "src": "2291:13:11"
                        },
                        "referencedDeclaration": 4258,
                        "src": "2291:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                          "typeString": "contract HEALFaaSToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2915,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "4845414c205374616b696e6720546f6b656e",
                        "id": 2903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2343:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_256d2276fb89ab3bebc4eb7994cd6270572b2a43b40adf07e2055e66ee8ea9ed",
                          "typeString": "literal_string \"HEAL Staking Token\""
                        },
                        "value": "HEAL Staking Token"
                      },
                      {
                        "hexValue": "734845414c",
                        "id": 2904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2372:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_83f47ecf9d2c1c04057647ee2d51efaa3bdc853be89007d8d461f8123f99bb33",
                          "typeString": "literal_string \"sHEAL\""
                        },
                        "value": "sHEAL"
                      },
                      {
                        "id": 2905,
                        "name": "_updatedSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2877,
                        "src": "2388:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2906,
                        "name": "_rewardsTokenAddy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2838,
                        "src": "2411:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2907,
                        "name": "_stakedTokenAddy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2840,
                        "src": "2437:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2908,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2462:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2462:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2910,
                        "name": "_perBlockAllocation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2844,
                        "src": "2481:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2911,
                        "name": "_lockedUntilDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2846,
                        "src": "2509:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2912,
                        "name": "_timelockSeconds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2848,
                        "src": "2534:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2913,
                        "name": "_isStakedNft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2850,
                        "src": "2559:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_256d2276fb89ab3bebc4eb7994cd6270572b2a43b40adf07e2055e66ee8ea9ed",
                          "typeString": "literal_string \"HEAL Staking Token\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_83f47ecf9d2c1c04057647ee2d51efaa3bdc853be89007d8d461f8123f99bb33",
                          "typeString": "literal_string \"sHEAL\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2317:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_contract$_HEALFaaSToken_$4258_$",
                        "typeString": "function (string memory,string memory,uint256,address,address,address,uint256,uint256,uint256,bool) returns (contract HEALFaaSToken)"
                      },
                      "typeName": {
                        "id": 2901,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2900,
                          "name": "HEALFaaSToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4258,
                          "src": "2321:13:11"
                        },
                        "referencedDeclaration": 4258,
                        "src": "2321:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                          "typeString": "contract HEALFaaSToken"
                        }
                      }
                    },
                    "id": 2914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2317:261:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                      "typeString": "contract HEALFaaSToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2291:287:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2921,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2899,
                            "src": "2618:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                              "typeString": "contract HEALFaaSToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                              "typeString": "contract HEALFaaSToken"
                            }
                          ],
                          "id": 2920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2610:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2919,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2610:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2610:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2916,
                        "name": "allFarmingContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2795,
                        "src": "2585:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2585:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 2923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2585:44:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2924,
                  "nodeType": "ExpressionStatement",
                  "src": "2585:44:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2931,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2899,
                            "src": "2686:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                              "typeString": "contract HEALFaaSToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                              "typeString": "contract HEALFaaSToken"
                            }
                          ],
                          "id": 2930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2678:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2929,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2678:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2678:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 2925,
                          "name": "tokensUpForStaking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2792,
                          "src": "2636:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 2927,
                        "indexExpression": {
                          "id": 2926,
                          "name": "_stakedTokenAddy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2840,
                          "src": "2655:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2636:36:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2636:41:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 2933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2636:61:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2934,
                  "nodeType": "ExpressionStatement",
                  "src": "2636:61:11"
                },
                {
                  "expression": {
                    "id": 2936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2704:23:11",
                    "subExpression": {
                      "id": 2935,
                      "name": "totalStakingContracts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2797,
                      "src": "2704:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2937,
                  "nodeType": "ExpressionStatement",
                  "src": "2704:23:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2943,
                            "name": "_contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2899,
                            "src": "2763:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                              "typeString": "contract HEALFaaSToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                              "typeString": "contract HEALFaaSToken"
                            }
                          ],
                          "id": 2942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2755:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2941,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2755:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2755:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2945,
                        "name": "_updatedSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2877,
                        "src": "2775:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2938,
                        "name": "_rewToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2859,
                        "src": "2736:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$698",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 2940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 234,
                      "src": "2736:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2736:54:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2947,
                  "nodeType": "ExpressionStatement",
                  "src": "2736:54:11"
                },
                {
                  "assignments": [
                    2949
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2949,
                      "mutability": "mutable",
                      "name": "_finalSupply",
                      "nameLocation": "2922:12:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 2980,
                      "src": "2914:20:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2948,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2914:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2968,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2950,
                        "name": "_updatedSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2877,
                        "src": "2937:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 2955,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2899,
                                "src": "2990:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                                  "typeString": "contract HEALFaaSToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                                  "typeString": "contract HEALFaaSToken"
                                }
                              ],
                              "id": 2954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2982:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2953,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2982:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2982:18:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2951,
                            "name": "_rewToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2859,
                            "src": "2962:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$698",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 2952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 209,
                          "src": "2962:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 2957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2962:39:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2937:64:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 2964,
                              "name": "_contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2899,
                              "src": "3063:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                                "typeString": "contract HEALFaaSToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                                "typeString": "contract HEALFaaSToken"
                              }
                            ],
                            "id": 2963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3055:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2962,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3055:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3055:18:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 2960,
                          "name": "_rewToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2859,
                          "src": "3035:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$698",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 2961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 209,
                        "src": "3035:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 2966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3035:39:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2937:137:11",
                    "trueExpression": {
                      "id": 2959,
                      "name": "_updatedSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2877,
                      "src": "3011:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2914:160:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2969,
                      "name": "_updatedSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2877,
                      "src": "3085:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 2970,
                      "name": "_finalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2949,
                      "src": "3103:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3085:30:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2979,
                  "nodeType": "IfStatement",
                  "src": "3081:89:11",
                  "trueBody": {
                    "id": 2978,
                    "nodeType": "Block",
                    "src": "3117:53:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2975,
                              "name": "_finalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2949,
                              "src": "3149:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2972,
                              "name": "_contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2899,
                              "src": "3126:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                                "typeString": "contract HEALFaaSToken"
                              }
                            },
                            "id": 2974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "updateSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3246,
                            "src": "3126:22:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 2976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3126:36:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2977,
                        "nodeType": "ExpressionStatement",
                        "src": "3126:36:11"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "51dd8dd0",
            "id": 2981,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNewTokenContract",
            "nameLocation": "1260:22:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2838,
                  "mutability": "mutable",
                  "name": "_rewardsTokenAddy",
                  "nameLocation": "1297:17:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2981,
                  "src": "1289:25:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2837,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1289:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2840,
                  "mutability": "mutable",
                  "name": "_stakedTokenAddy",
                  "nameLocation": "1329:16:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2981,
                  "src": "1321:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1321:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2842,
                  "mutability": "mutable",
                  "name": "_supply",
                  "nameLocation": "1360:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2981,
                  "src": "1352:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1352:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2844,
                  "mutability": "mutable",
                  "name": "_perBlockAllocation",
                  "nameLocation": "1382:19:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2981,
                  "src": "1374:27:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2843,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1374:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2846,
                  "mutability": "mutable",
                  "name": "_lockedUntilDate",
                  "nameLocation": "1416:16:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2981,
                  "src": "1408:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1408:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2848,
                  "mutability": "mutable",
                  "name": "_timelockSeconds",
                  "nameLocation": "1447:16:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2981,
                  "src": "1439:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1439:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2850,
                  "mutability": "mutable",
                  "name": "_isStakedNft",
                  "nameLocation": "1475:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2981,
                  "src": "1470:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2849,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1470:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1282:210:11"
            },
            "returnParameters": {
              "id": 2852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1510:0:11"
            },
            "scope": 3029,
            "src": "1251:1924:11",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3027,
              "nodeType": "Block",
              "src": "3243:494:11",
              "statements": [
                {
                  "assignments": [
                    2988
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2988,
                      "mutability": "mutable",
                      "name": "_contract",
                      "nameLocation": "3264:9:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 3027,
                      "src": "3250:23:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                        "typeString": "contract HEALFaaSToken"
                      },
                      "typeName": {
                        "id": 2987,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2986,
                          "name": "HEALFaaSToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4258,
                          "src": "3250:13:11"
                        },
                        "referencedDeclaration": 4258,
                        "src": "3250:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                          "typeString": "contract HEALFaaSToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2992,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2990,
                        "name": "_faasTokenAddy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2983,
                        "src": "3290:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2989,
                      "name": "HEALFaaSToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4258,
                      "src": "3276:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_HEALFaaSToken_$4258_$",
                        "typeString": "type(contract HEALFaaSToken)"
                      }
                    },
                    "id": 2991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3276:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                      "typeString": "contract HEALFaaSToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3250:55:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2994,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3328:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3328:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2996,
                              "name": "_contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2988,
                              "src": "3342:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                                "typeString": "contract HEALFaaSToken"
                              }
                            },
                            "id": 2997,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3284,
                            "src": "3342:20:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 2998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3342:22:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3328:36:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "75736572206d75737420626520746865206f726967696e616c20746f6b656e206f776e657220746f2072656d6f766520746f6b656e73",
                        "id": 3000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3373:56:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_66d5f61e90fc7ada073db45873bd81ed1e58c3f1ff38a23c7035dc3bdee09d87",
                          "typeString": "literal_string \"user must be the original token owner to remove tokens\""
                        },
                        "value": "user must be the original token owner to remove tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_66d5f61e90fc7ada073db45873bd81ed1e58c3f1ff38a23c7035dc3bdee09d87",
                          "typeString": "literal_string \"user must be the original token owner to remove tokens\""
                        }
                      ],
                      "id": 2993,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3312:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3312:124:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3002,
                  "nodeType": "ExpressionStatement",
                  "src": "3312:124:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3004,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "3459:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3459:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 3006,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2988,
                                "src": "3477:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                                  "typeString": "contract HEALFaaSToken"
                                }
                              },
                              "id": 3007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getLockedUntilDate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3293,
                              "src": "3477:28:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 3008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3477:30:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3459:48:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 3010,
                                "name": "_contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2988,
                                "src": "3520:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                                  "typeString": "contract HEALFaaSToken"
                                }
                              },
                              "id": 3011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getLockedUntilDate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3293,
                              "src": "3520:28:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 3012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3520:30:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3013,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3554:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3520:35:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3459:96:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6974206d75737420626520616674657220746865206c6f636b65642074696d65207468652075736572206f726967696e616c6c7920636f6e6669677572656420616e64206e6f74206c6f636b656420666f7265766572",
                        "id": 3016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3564:88:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28e953ae3adb1a30badea18e423c357c898a37bafb2b9f1266f0238b14c075f6",
                          "typeString": "literal_string \"it must be after the locked time the user originally configured and not locked forever\""
                        },
                        "value": "it must be after the locked time the user originally configured and not locked forever"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28e953ae3adb1a30badea18e423c357c898a37bafb2b9f1266f0238b14c075f6",
                          "typeString": "literal_string \"it must be after the locked time the user originally configured and not locked forever\""
                        }
                      ],
                      "id": 3003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3443:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3443:216:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3018,
                  "nodeType": "ExpressionStatement",
                  "src": "3443:216:11"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 3019,
                        "name": "_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2988,
                        "src": "3668:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HEALFaaSToken_$4258",
                          "typeString": "contract HEALFaaSToken"
                        }
                      },
                      "id": 3021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeStakeableTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3331,
                      "src": "3668:31:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 3022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3668:33:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3023,
                  "nodeType": "ExpressionStatement",
                  "src": "3668:33:11"
                },
                {
                  "expression": {
                    "id": 3025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "--",
                    "prefix": false,
                    "src": "3708:23:11",
                    "subExpression": {
                      "id": 3024,
                      "name": "totalStakingContracts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2797,
                      "src": "3708:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3026,
                  "nodeType": "ExpressionStatement",
                  "src": "3708:23:11"
                }
              ]
            },
            "functionSelector": "571d959d",
            "id": 3028,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeTokenContract",
            "nameLocation": "3190:19:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2983,
                  "mutability": "mutable",
                  "name": "_faasTokenAddy",
                  "nameLocation": "3218:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3028,
                  "src": "3210:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2982,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3210:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3209:24:11"
            },
            "returnParameters": {
              "id": 2985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3243:0:11"
            },
            "scope": 3029,
            "src": "3181:556:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3030,
        "src": "304:3436:11",
        "usedErrors": []
      }
    ],
    "src": "33:3707:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "97": {
      "events": {},
      "links": {},
      "address": "0xA2e4Ceb099DbB3209bF551edf5986717aDA3519c",
      "transactionHash": "0x28c0531fc810116993a7582db66f19e1dda74ac6107dd1742bfdfb3c84f4164c"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-03-13T17:53:52.574Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Lance Whatley",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "HEALFaaS (sHEAL)",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "The constructor for the staking master contract."
      }
    },
    "notice": "Implements the master FaaS contract to keep track of all tokens being added to be staked and staking.",
    "version": 1
  }
}